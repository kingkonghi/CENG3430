// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="HLS_accel,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=4270,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=160,HLS_SYN_FF=13720,HLS_SYN_LUT=23786}" *)

module HLS_accel (
        ap_clk,
        ap_rst_n,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_TDATA,
        OUTPUT_STREAM_TVALID,
        OUTPUT_STREAM_TREADY,
        OUTPUT_STREAM_TKEEP,
        OUTPUT_STREAM_TSTRB,
        OUTPUT_STREAM_TUSER,
        OUTPUT_STREAM_TLAST,
        OUTPUT_STREAM_TID,
        OUTPUT_STREAM_TDEST,
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'b1;
parameter    ap_ST_fsm_pp0_stage0 = 8'b10;
parameter    ap_ST_fsm_state4 = 8'b100;
parameter    ap_ST_fsm_pp1_stage0 = 8'b1000;
parameter    ap_ST_fsm_state7 = 8'b10000;
parameter    ap_ST_fsm_state8 = 8'b100000;
parameter    ap_ST_fsm_pp2_stage0 = 8'b1000000;
parameter    ap_ST_fsm_state12 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv5_1E = 5'b11110;
parameter    ap_const_lv5_1D = 5'b11101;
parameter    ap_const_lv5_1C = 5'b11100;
parameter    ap_const_lv5_1B = 5'b11011;
parameter    ap_const_lv5_1A = 5'b11010;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv5_18 = 5'b11000;
parameter    ap_const_lv5_17 = 5'b10111;
parameter    ap_const_lv5_16 = 5'b10110;
parameter    ap_const_lv5_15 = 5'b10101;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_13 = 5'b10011;
parameter    ap_const_lv5_12 = 5'b10010;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv5_10 = 5'b10000;
parameter    ap_const_lv5_F = 5'b1111;
parameter    ap_const_lv5_E = 5'b1110;
parameter    ap_const_lv5_D = 5'b1101;
parameter    ap_const_lv5_C = 5'b1100;
parameter    ap_const_lv5_B = 5'b1011;
parameter    ap_const_lv5_A = 5'b1010;
parameter    ap_const_lv5_9 = 5'b1001;
parameter    ap_const_lv5_8 = 5'b1000;
parameter    ap_const_lv5_7 = 5'b111;
parameter    ap_const_lv5_6 = 5'b110;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv5_1F = 5'b11111;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv11_400 = 11'b10000000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv32_7 = 32'b111;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] INPUT_STREAM_TDATA;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
input  [3:0] INPUT_STREAM_TKEEP;
input  [3:0] INPUT_STREAM_TSTRB;
input  [3:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [4:0] INPUT_STREAM_TID;
input  [4:0] INPUT_STREAM_TDEST;
output  [31:0] OUTPUT_STREAM_TDATA;
output   OUTPUT_STREAM_TVALID;
input   OUTPUT_STREAM_TREADY;
output  [3:0] OUTPUT_STREAM_TKEEP;
output  [3:0] OUTPUT_STREAM_TSTRB;
output  [3:0] OUTPUT_STREAM_TUSER;
output  [0:0] OUTPUT_STREAM_TLAST;
output  [4:0] OUTPUT_STREAM_TID;
output  [4:0] OUTPUT_STREAM_TDEST;
input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
reg   [31:0] INPUT_STREAM_data_V_0_data_out;
wire    INPUT_STREAM_data_V_0_vld_in;
wire    INPUT_STREAM_data_V_0_vld_out;
wire    INPUT_STREAM_data_V_0_ack_in;
reg    INPUT_STREAM_data_V_0_ack_out;
reg   [31:0] INPUT_STREAM_data_V_0_payload_A;
reg   [31:0] INPUT_STREAM_data_V_0_payload_B;
reg    INPUT_STREAM_data_V_0_sel_rd;
reg    INPUT_STREAM_data_V_0_sel_wr;
wire    INPUT_STREAM_data_V_0_sel;
wire    INPUT_STREAM_data_V_0_load_A;
wire    INPUT_STREAM_data_V_0_load_B;
reg   [1:0] INPUT_STREAM_data_V_0_state;
wire    INPUT_STREAM_data_V_0_state_cmp_full;
wire    INPUT_STREAM_dest_V_0_vld_in;
reg    INPUT_STREAM_dest_V_0_ack_out;
reg   [1:0] INPUT_STREAM_dest_V_0_state;
reg   [31:0] OUTPUT_STREAM_data_V_1_data_out;
reg    OUTPUT_STREAM_data_V_1_vld_in;
wire    OUTPUT_STREAM_data_V_1_vld_out;
wire    OUTPUT_STREAM_data_V_1_ack_in;
wire    OUTPUT_STREAM_data_V_1_ack_out;
reg   [31:0] OUTPUT_STREAM_data_V_1_payload_A;
reg   [31:0] OUTPUT_STREAM_data_V_1_payload_B;
reg    OUTPUT_STREAM_data_V_1_sel_rd;
reg    OUTPUT_STREAM_data_V_1_sel_wr;
wire    OUTPUT_STREAM_data_V_1_sel;
wire    OUTPUT_STREAM_data_V_1_load_A;
wire    OUTPUT_STREAM_data_V_1_load_B;
reg   [1:0] OUTPUT_STREAM_data_V_1_state;
wire    OUTPUT_STREAM_data_V_1_state_cmp_full;
wire   [3:0] OUTPUT_STREAM_keep_V_1_data_out;
reg    OUTPUT_STREAM_keep_V_1_vld_in;
wire    OUTPUT_STREAM_keep_V_1_vld_out;
wire    OUTPUT_STREAM_keep_V_1_ack_in;
wire    OUTPUT_STREAM_keep_V_1_ack_out;
reg    OUTPUT_STREAM_keep_V_1_sel_rd;
wire    OUTPUT_STREAM_keep_V_1_sel;
reg   [1:0] OUTPUT_STREAM_keep_V_1_state;
wire   [3:0] OUTPUT_STREAM_strb_V_1_data_out;
reg    OUTPUT_STREAM_strb_V_1_vld_in;
wire    OUTPUT_STREAM_strb_V_1_vld_out;
wire    OUTPUT_STREAM_strb_V_1_ack_in;
wire    OUTPUT_STREAM_strb_V_1_ack_out;
reg    OUTPUT_STREAM_strb_V_1_sel_rd;
wire    OUTPUT_STREAM_strb_V_1_sel;
reg   [1:0] OUTPUT_STREAM_strb_V_1_state;
wire   [3:0] OUTPUT_STREAM_user_V_1_data_out;
reg    OUTPUT_STREAM_user_V_1_vld_in;
wire    OUTPUT_STREAM_user_V_1_vld_out;
wire    OUTPUT_STREAM_user_V_1_ack_in;
wire    OUTPUT_STREAM_user_V_1_ack_out;
reg    OUTPUT_STREAM_user_V_1_sel_rd;
wire    OUTPUT_STREAM_user_V_1_sel;
reg   [1:0] OUTPUT_STREAM_user_V_1_state;
reg   [0:0] OUTPUT_STREAM_last_V_1_data_out;
reg    OUTPUT_STREAM_last_V_1_vld_in;
wire    OUTPUT_STREAM_last_V_1_vld_out;
wire    OUTPUT_STREAM_last_V_1_ack_in;
wire    OUTPUT_STREAM_last_V_1_ack_out;
reg   [0:0] OUTPUT_STREAM_last_V_1_payload_A;
reg   [0:0] OUTPUT_STREAM_last_V_1_payload_B;
reg    OUTPUT_STREAM_last_V_1_sel_rd;
reg    OUTPUT_STREAM_last_V_1_sel_wr;
wire    OUTPUT_STREAM_last_V_1_sel;
wire    OUTPUT_STREAM_last_V_1_load_A;
wire    OUTPUT_STREAM_last_V_1_load_B;
reg   [1:0] OUTPUT_STREAM_last_V_1_state;
wire    OUTPUT_STREAM_last_V_1_state_cmp_full;
wire   [4:0] OUTPUT_STREAM_id_V_1_data_out;
reg    OUTPUT_STREAM_id_V_1_vld_in;
wire    OUTPUT_STREAM_id_V_1_vld_out;
wire    OUTPUT_STREAM_id_V_1_ack_in;
wire    OUTPUT_STREAM_id_V_1_ack_out;
reg    OUTPUT_STREAM_id_V_1_sel_rd;
wire    OUTPUT_STREAM_id_V_1_sel;
reg   [1:0] OUTPUT_STREAM_id_V_1_state;
wire   [4:0] OUTPUT_STREAM_dest_V_1_data_out;
reg    OUTPUT_STREAM_dest_V_1_vld_in;
wire    OUTPUT_STREAM_dest_V_1_vld_out;
wire    OUTPUT_STREAM_dest_V_1_ack_in;
wire    OUTPUT_STREAM_dest_V_1_ack_out;
reg    OUTPUT_STREAM_dest_V_1_sel_rd;
wire    OUTPUT_STREAM_dest_V_1_sel;
reg   [1:0] OUTPUT_STREAM_dest_V_1_state;
reg    INPUT_STREAM_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_flatten_reg_1699;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond_flatten1_reg_1723;
reg    OUTPUT_STREAM_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond_flatten2_reg_1751;
reg    ap_enable_reg_pp2_iter2;
reg   [0:0] ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751;
reg   [10:0] indvar_flatten_reg_1179;
reg   [5:0] i_0_i_reg_1190;
reg   [5:0] j_0_i_reg_1201;
reg   [10:0] indvar_flatten1_reg_1212;
reg   [5:0] i1_0_i_reg_1223;
reg   [5:0] j2_0_i_reg_1234;
reg   [10:0] indvar_flatten2_reg_1245;
reg   [5:0] i4_0_i_reg_1256;
reg   [5:0] j5_0_i_reg_1267;
wire   [0:0] exitcond_flatten_fu_1351_p2;
wire   [10:0] indvar_flatten_next_fu_1357_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] i_0_i_cast8_mid2_v_fu_1383_p3;
reg   [5:0] i_0_i_cast8_mid2_v_reg_1708;
wire   [4:0] tmp_1_fu_1391_p1;
reg   [4:0] tmp_1_reg_1714;
wire   [5:0] j_fu_1395_p2;
wire   [0:0] exitcond_flatten1_fu_1472_p2;
wire   [10:0] indvar_flatten_next2_fu_1478_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] j2_0_i_mid2_fu_1496_p3;
reg   [5:0] j2_0_i_mid2_reg_1732;
wire   [5:0] i1_0_i_t_mid2_v_fu_1504_p3;
reg   [5:0] i1_0_i_t_mid2_v_reg_1737;
wire   [4:0] tmp_2_fu_1512_p1;
reg   [4:0] tmp_2_reg_1742;
wire   [5:0] j_1_fu_1516_p2;
wire   [0:0] exitcond_flatten2_fu_1593_p2;
wire   [10:0] indvar_flatten_next1_fu_1599_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [5:0] i4_0_i_cast4_mid2_v_fu_1625_p3;
reg   [5:0] i4_0_i_cast4_mid2_v_reg_1760;
wire   [0:0] last_assign_fu_1682_p2;
reg   [0:0] last_assign_reg_1770;
wire   [5:0] j_2_fu_1688_p2;
wire   [31:0] val_assign_fu_1694_p1;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state8;
wire    grp_mmult_hw_float_32_s_fu_1278_ap_done;
reg   [4:0] a_0_address0;
reg    a_0_ce0;
reg    a_0_we0;
wire   [31:0] a_0_q0;
reg   [4:0] a_1_address0;
reg    a_1_ce0;
reg    a_1_we0;
wire   [31:0] a_1_q0;
reg   [4:0] a_2_address0;
reg    a_2_ce0;
reg    a_2_we0;
wire   [31:0] a_2_q0;
reg   [4:0] a_3_address0;
reg    a_3_ce0;
reg    a_3_we0;
wire   [31:0] a_3_q0;
reg   [4:0] a_4_address0;
reg    a_4_ce0;
reg    a_4_we0;
wire   [31:0] a_4_q0;
reg   [4:0] a_5_address0;
reg    a_5_ce0;
reg    a_5_we0;
wire   [31:0] a_5_q0;
reg   [4:0] a_6_address0;
reg    a_6_ce0;
reg    a_6_we0;
wire   [31:0] a_6_q0;
reg   [4:0] a_7_address0;
reg    a_7_ce0;
reg    a_7_we0;
wire   [31:0] a_7_q0;
reg   [4:0] a_8_address0;
reg    a_8_ce0;
reg    a_8_we0;
wire   [31:0] a_8_q0;
reg   [4:0] a_9_address0;
reg    a_9_ce0;
reg    a_9_we0;
wire   [31:0] a_9_q0;
reg   [4:0] a_10_address0;
reg    a_10_ce0;
reg    a_10_we0;
wire   [31:0] a_10_q0;
reg   [4:0] a_11_address0;
reg    a_11_ce0;
reg    a_11_we0;
wire   [31:0] a_11_q0;
reg   [4:0] a_12_address0;
reg    a_12_ce0;
reg    a_12_we0;
wire   [31:0] a_12_q0;
reg   [4:0] a_13_address0;
reg    a_13_ce0;
reg    a_13_we0;
wire   [31:0] a_13_q0;
reg   [4:0] a_14_address0;
reg    a_14_ce0;
reg    a_14_we0;
wire   [31:0] a_14_q0;
reg   [4:0] a_15_address0;
reg    a_15_ce0;
reg    a_15_we0;
wire   [31:0] a_15_q0;
reg   [4:0] a_16_address0;
reg    a_16_ce0;
reg    a_16_we0;
wire   [31:0] a_16_q0;
reg   [4:0] a_17_address0;
reg    a_17_ce0;
reg    a_17_we0;
wire   [31:0] a_17_q0;
reg   [4:0] a_18_address0;
reg    a_18_ce0;
reg    a_18_we0;
wire   [31:0] a_18_q0;
reg   [4:0] a_19_address0;
reg    a_19_ce0;
reg    a_19_we0;
wire   [31:0] a_19_q0;
reg   [4:0] a_20_address0;
reg    a_20_ce0;
reg    a_20_we0;
wire   [31:0] a_20_q0;
reg   [4:0] a_21_address0;
reg    a_21_ce0;
reg    a_21_we0;
wire   [31:0] a_21_q0;
reg   [4:0] a_22_address0;
reg    a_22_ce0;
reg    a_22_we0;
wire   [31:0] a_22_q0;
reg   [4:0] a_23_address0;
reg    a_23_ce0;
reg    a_23_we0;
wire   [31:0] a_23_q0;
reg   [4:0] a_24_address0;
reg    a_24_ce0;
reg    a_24_we0;
wire   [31:0] a_24_q0;
reg   [4:0] a_25_address0;
reg    a_25_ce0;
reg    a_25_we0;
wire   [31:0] a_25_q0;
reg   [4:0] a_26_address0;
reg    a_26_ce0;
reg    a_26_we0;
wire   [31:0] a_26_q0;
reg   [4:0] a_27_address0;
reg    a_27_ce0;
reg    a_27_we0;
wire   [31:0] a_27_q0;
reg   [4:0] a_28_address0;
reg    a_28_ce0;
reg    a_28_we0;
wire   [31:0] a_28_q0;
reg   [4:0] a_29_address0;
reg    a_29_ce0;
reg    a_29_we0;
wire   [31:0] a_29_q0;
reg   [4:0] a_30_address0;
reg    a_30_ce0;
reg    a_30_we0;
wire   [31:0] a_30_q0;
reg   [4:0] a_31_address0;
reg    a_31_ce0;
reg    a_31_we0;
wire   [31:0] a_31_q0;
reg   [4:0] b_0_address0;
reg    b_0_ce0;
reg    b_0_we0;
wire   [31:0] b_0_q0;
reg   [4:0] b_1_address0;
reg    b_1_ce0;
reg    b_1_we0;
wire   [31:0] b_1_q0;
reg   [4:0] b_2_address0;
reg    b_2_ce0;
reg    b_2_we0;
wire   [31:0] b_2_q0;
reg   [4:0] b_3_address0;
reg    b_3_ce0;
reg    b_3_we0;
wire   [31:0] b_3_q0;
reg   [4:0] b_4_address0;
reg    b_4_ce0;
reg    b_4_we0;
wire   [31:0] b_4_q0;
reg   [4:0] b_5_address0;
reg    b_5_ce0;
reg    b_5_we0;
wire   [31:0] b_5_q0;
reg   [4:0] b_6_address0;
reg    b_6_ce0;
reg    b_6_we0;
wire   [31:0] b_6_q0;
reg   [4:0] b_7_address0;
reg    b_7_ce0;
reg    b_7_we0;
wire   [31:0] b_7_q0;
reg   [4:0] b_8_address0;
reg    b_8_ce0;
reg    b_8_we0;
wire   [31:0] b_8_q0;
reg   [4:0] b_9_address0;
reg    b_9_ce0;
reg    b_9_we0;
wire   [31:0] b_9_q0;
reg   [4:0] b_10_address0;
reg    b_10_ce0;
reg    b_10_we0;
wire   [31:0] b_10_q0;
reg   [4:0] b_11_address0;
reg    b_11_ce0;
reg    b_11_we0;
wire   [31:0] b_11_q0;
reg   [4:0] b_12_address0;
reg    b_12_ce0;
reg    b_12_we0;
wire   [31:0] b_12_q0;
reg   [4:0] b_13_address0;
reg    b_13_ce0;
reg    b_13_we0;
wire   [31:0] b_13_q0;
reg   [4:0] b_14_address0;
reg    b_14_ce0;
reg    b_14_we0;
wire   [31:0] b_14_q0;
reg   [4:0] b_15_address0;
reg    b_15_ce0;
reg    b_15_we0;
wire   [31:0] b_15_q0;
reg   [4:0] b_16_address0;
reg    b_16_ce0;
reg    b_16_we0;
wire   [31:0] b_16_q0;
reg   [4:0] b_17_address0;
reg    b_17_ce0;
reg    b_17_we0;
wire   [31:0] b_17_q0;
reg   [4:0] b_18_address0;
reg    b_18_ce0;
reg    b_18_we0;
wire   [31:0] b_18_q0;
reg   [4:0] b_19_address0;
reg    b_19_ce0;
reg    b_19_we0;
wire   [31:0] b_19_q0;
reg   [4:0] b_20_address0;
reg    b_20_ce0;
reg    b_20_we0;
wire   [31:0] b_20_q0;
reg   [4:0] b_21_address0;
reg    b_21_ce0;
reg    b_21_we0;
wire   [31:0] b_21_q0;
reg   [4:0] b_22_address0;
reg    b_22_ce0;
reg    b_22_we0;
wire   [31:0] b_22_q0;
reg   [4:0] b_23_address0;
reg    b_23_ce0;
reg    b_23_we0;
wire   [31:0] b_23_q0;
reg   [4:0] b_24_address0;
reg    b_24_ce0;
reg    b_24_we0;
wire   [31:0] b_24_q0;
reg   [4:0] b_25_address0;
reg    b_25_ce0;
reg    b_25_we0;
wire   [31:0] b_25_q0;
reg   [4:0] b_26_address0;
reg    b_26_ce0;
reg    b_26_we0;
wire   [31:0] b_26_q0;
reg   [4:0] b_27_address0;
reg    b_27_ce0;
reg    b_27_we0;
wire   [31:0] b_27_q0;
reg   [4:0] b_28_address0;
reg    b_28_ce0;
reg    b_28_we0;
wire   [31:0] b_28_q0;
reg   [4:0] b_29_address0;
reg    b_29_ce0;
reg    b_29_we0;
wire   [31:0] b_29_q0;
reg   [4:0] b_30_address0;
reg    b_30_ce0;
reg    b_30_we0;
wire   [31:0] b_30_q0;
reg   [4:0] b_31_address0;
reg    b_31_ce0;
reg    b_31_we0;
wire   [31:0] b_31_q0;
reg   [9:0] out_address0;
reg    out_ce0;
reg    out_we0;
wire   [31:0] out_q0;
wire    grp_mmult_hw_float_32_s_fu_1278_ap_start;
wire    grp_mmult_hw_float_32_s_fu_1278_ap_idle;
wire    grp_mmult_hw_float_32_s_fu_1278_ap_ready;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_0_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_0_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_1_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_1_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_2_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_2_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_3_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_3_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_4_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_4_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_5_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_5_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_6_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_6_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_7_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_7_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_8_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_8_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_9_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_9_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_10_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_10_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_11_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_11_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_12_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_12_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_13_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_13_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_14_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_14_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_15_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_15_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_16_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_16_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_17_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_17_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_18_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_18_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_19_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_19_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_20_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_20_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_21_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_21_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_22_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_22_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_23_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_23_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_24_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_24_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_25_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_25_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_26_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_26_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_27_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_27_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_28_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_28_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_29_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_29_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_30_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_30_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_a_31_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_a_31_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_0_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_0_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_1_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_1_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_2_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_2_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_3_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_3_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_4_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_4_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_5_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_5_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_6_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_6_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_7_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_7_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_8_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_8_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_9_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_9_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_10_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_10_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_11_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_11_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_12_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_12_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_13_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_13_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_14_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_14_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_15_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_15_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_16_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_16_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_17_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_17_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_18_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_18_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_19_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_19_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_20_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_20_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_21_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_21_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_22_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_22_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_23_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_23_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_24_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_24_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_25_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_25_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_26_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_26_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_27_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_27_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_28_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_28_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_29_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_29_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_30_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_30_ce0;
wire   [4:0] grp_mmult_hw_float_32_s_fu_1278_b_31_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_b_31_ce0;
wire   [9:0] grp_mmult_hw_float_32_s_fu_1278_out_r_address0;
wire    grp_mmult_hw_float_32_s_fu_1278_out_r_ce0;
wire    grp_mmult_hw_float_32_s_fu_1278_out_r_we0;
wire   [31:0] grp_mmult_hw_float_32_s_fu_1278_out_r_d0;
reg   [5:0] i_0_i_phi_fu_1194_p4;
reg   [5:0] i1_0_i_phi_fu_1227_p4;
reg   [5:0] i4_0_i_phi_fu_1260_p4;
reg    ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start;
wire   [0:0] ap_CS_fsm_state7;
wire   [31:0] i_0_i_cast8_mid2_fu_1401_p1;
wire   [31:0] j2_0_i_cast5_fu_1522_p1;
wire   [31:0] tmp_36_cast_fu_1671_p1;
wire   [31:0] ret_fu_1436_p1;
wire   [31:0] ret_1_fu_1557_p1;
wire   [0:0] exitcond4_i_fu_1369_p2;
wire   [5:0] i_fu_1363_p2;
wire   [5:0] j_0_i_mid2_fu_1375_p3;
wire   [0:0] exitcond2_i_fu_1490_p2;
wire   [5:0] i_1_fu_1484_p2;
wire   [0:0] exitcond_i_fu_1611_p2;
wire   [5:0] i_2_fu_1605_p2;
wire   [10:0] tmp_fu_1633_p3;
wire   [4:0] tmp_3_fu_1645_p1;
wire   [5:0] j5_0_i_mid2_fu_1617_p3;
wire   [11:0] tmp_34_cast_fu_1641_p1;
wire   [11:0] j5_0_i_cast1_cast_fu_1661_p1;
wire   [11:0] tmp_34_fu_1665_p2;
wire   [9:0] tmp_7_mid2_fu_1649_p3;
wire   [9:0] j5_0_i_cast2_fu_1657_p1;
wire   [9:0] k_fu_1676_p2;
wire   [0:0] ap_CS_fsm_state12;
reg    ap_condition_2362;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'b1;
#0 INPUT_STREAM_data_V_0_sel_rd = 1'b0;
#0 INPUT_STREAM_data_V_0_sel_wr = 1'b0;
#0 INPUT_STREAM_data_V_0_state = 2'b00;
#0 INPUT_STREAM_dest_V_0_state = 2'b00;
#0 OUTPUT_STREAM_data_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_data_V_1_sel_wr = 1'b0;
#0 OUTPUT_STREAM_data_V_1_state = 2'b00;
#0 OUTPUT_STREAM_keep_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_keep_V_1_state = 2'b00;
#0 OUTPUT_STREAM_strb_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_strb_V_1_state = 2'b00;
#0 OUTPUT_STREAM_user_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_user_V_1_state = 2'b00;
#0 OUTPUT_STREAM_last_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_last_V_1_sel_wr = 1'b0;
#0 OUTPUT_STREAM_last_V_1_state = 2'b00;
#0 OUTPUT_STREAM_id_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_id_V_1_state = 2'b00;
#0 OUTPUT_STREAM_dest_V_1_sel_rd = 1'b0;
#0 OUTPUT_STREAM_dest_V_1_state = 2'b00;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start = 1'b0;
end

HLS_accel_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
HLS_accel_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_0_address0),
    .ce0(a_0_ce0),
    .we0(a_0_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_0_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_1_address0),
    .ce0(a_1_ce0),
    .we0(a_1_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_1_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_2_address0),
    .ce0(a_2_ce0),
    .we0(a_2_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_2_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_3_address0),
    .ce0(a_3_ce0),
    .we0(a_3_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_3_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_4_address0),
    .ce0(a_4_ce0),
    .we0(a_4_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_4_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_5_address0),
    .ce0(a_5_ce0),
    .we0(a_5_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_5_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_6_address0),
    .ce0(a_6_ce0),
    .we0(a_6_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_6_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_7_address0),
    .ce0(a_7_ce0),
    .we0(a_7_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_7_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_8_address0),
    .ce0(a_8_ce0),
    .we0(a_8_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_8_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_9_address0),
    .ce0(a_9_ce0),
    .we0(a_9_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_9_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_10_address0),
    .ce0(a_10_ce0),
    .we0(a_10_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_10_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_11_address0),
    .ce0(a_11_ce0),
    .we0(a_11_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_11_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_12_address0),
    .ce0(a_12_ce0),
    .we0(a_12_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_12_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_13_address0),
    .ce0(a_13_ce0),
    .we0(a_13_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_13_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_14_address0),
    .ce0(a_14_ce0),
    .we0(a_14_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_14_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_15_address0),
    .ce0(a_15_ce0),
    .we0(a_15_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_15_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_16_address0),
    .ce0(a_16_ce0),
    .we0(a_16_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_16_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_17_address0),
    .ce0(a_17_ce0),
    .we0(a_17_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_17_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_18_address0),
    .ce0(a_18_ce0),
    .we0(a_18_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_18_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_19_address0),
    .ce0(a_19_ce0),
    .we0(a_19_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_19_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_20_address0),
    .ce0(a_20_ce0),
    .we0(a_20_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_20_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_21_address0),
    .ce0(a_21_ce0),
    .we0(a_21_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_21_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_22_address0),
    .ce0(a_22_ce0),
    .we0(a_22_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_22_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_23_address0),
    .ce0(a_23_ce0),
    .we0(a_23_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_23_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_24_address0),
    .ce0(a_24_ce0),
    .we0(a_24_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_24_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_25_address0),
    .ce0(a_25_ce0),
    .we0(a_25_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_25_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_26_address0),
    .ce0(a_26_ce0),
    .we0(a_26_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_26_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_27_address0),
    .ce0(a_27_ce0),
    .we0(a_27_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_27_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_28_address0),
    .ce0(a_28_ce0),
    .we0(a_28_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_28_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_29_address0),
    .ce0(a_29_ce0),
    .we0(a_29_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_29_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_30_address0),
    .ce0(a_30_ce0),
    .we0(a_30_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_30_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
a_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(a_31_address0),
    .ce0(a_31_ce0),
    .we0(a_31_we0),
    .d0(ret_fu_1436_p1),
    .q0(a_31_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_0_address0),
    .ce0(b_0_ce0),
    .we0(b_0_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_0_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_1_address0),
    .ce0(b_1_ce0),
    .we0(b_1_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_1_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_2_address0),
    .ce0(b_2_ce0),
    .we0(b_2_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_2_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_3_address0),
    .ce0(b_3_ce0),
    .we0(b_3_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_3_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_4_address0),
    .ce0(b_4_ce0),
    .we0(b_4_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_4_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_5_address0),
    .ce0(b_5_ce0),
    .we0(b_5_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_5_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_6_address0),
    .ce0(b_6_ce0),
    .we0(b_6_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_6_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_7_address0),
    .ce0(b_7_ce0),
    .we0(b_7_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_7_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_8_address0),
    .ce0(b_8_ce0),
    .we0(b_8_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_8_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_9_address0),
    .ce0(b_9_ce0),
    .we0(b_9_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_9_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_10_address0),
    .ce0(b_10_ce0),
    .we0(b_10_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_10_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_11_address0),
    .ce0(b_11_ce0),
    .we0(b_11_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_11_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_12_address0),
    .ce0(b_12_ce0),
    .we0(b_12_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_12_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_13_address0),
    .ce0(b_13_ce0),
    .we0(b_13_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_13_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_14_address0),
    .ce0(b_14_ce0),
    .we0(b_14_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_14_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_15_address0),
    .ce0(b_15_ce0),
    .we0(b_15_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_15_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_16_address0),
    .ce0(b_16_ce0),
    .we0(b_16_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_16_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_17_address0),
    .ce0(b_17_ce0),
    .we0(b_17_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_17_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_18_address0),
    .ce0(b_18_ce0),
    .we0(b_18_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_18_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_19_address0),
    .ce0(b_19_ce0),
    .we0(b_19_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_19_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_20_address0),
    .ce0(b_20_ce0),
    .we0(b_20_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_20_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_21_address0),
    .ce0(b_21_ce0),
    .we0(b_21_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_21_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_22_address0),
    .ce0(b_22_ce0),
    .we0(b_22_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_22_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_23_address0),
    .ce0(b_23_ce0),
    .we0(b_23_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_23_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_24_address0),
    .ce0(b_24_ce0),
    .we0(b_24_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_24_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_25_address0),
    .ce0(b_25_ce0),
    .we0(b_25_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_25_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_26_address0),
    .ce0(b_26_ce0),
    .we0(b_26_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_26_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_27_address0),
    .ce0(b_27_ce0),
    .we0(b_27_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_27_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_28_address0),
    .ce0(b_28_ce0),
    .we0(b_28_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_28_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_29_address0),
    .ce0(b_29_ce0),
    .we0(b_29_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_29_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_30_address0),
    .ce0(b_30_ce0),
    .we0(b_30_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_30_q0)
);

HLS_accel_a_0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
b_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_31_address0),
    .ce0(b_31_ce0),
    .we0(b_31_we0),
    .d0(ret_1_fu_1557_p1),
    .q0(b_31_q0)
);

HLS_accel_out #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(out_address0),
    .ce0(out_ce0),
    .we0(out_we0),
    .d0(grp_mmult_hw_float_32_s_fu_1278_out_r_d0),
    .q0(out_q0)
);

mmult_hw_float_32_s grp_mmult_hw_float_32_s_fu_1278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mmult_hw_float_32_s_fu_1278_ap_start),
    .ap_done(grp_mmult_hw_float_32_s_fu_1278_ap_done),
    .ap_idle(grp_mmult_hw_float_32_s_fu_1278_ap_idle),
    .ap_ready(grp_mmult_hw_float_32_s_fu_1278_ap_ready),
    .a_0_address0(grp_mmult_hw_float_32_s_fu_1278_a_0_address0),
    .a_0_ce0(grp_mmult_hw_float_32_s_fu_1278_a_0_ce0),
    .a_0_q0(a_0_q0),
    .a_1_address0(grp_mmult_hw_float_32_s_fu_1278_a_1_address0),
    .a_1_ce0(grp_mmult_hw_float_32_s_fu_1278_a_1_ce0),
    .a_1_q0(a_1_q0),
    .a_2_address0(grp_mmult_hw_float_32_s_fu_1278_a_2_address0),
    .a_2_ce0(grp_mmult_hw_float_32_s_fu_1278_a_2_ce0),
    .a_2_q0(a_2_q0),
    .a_3_address0(grp_mmult_hw_float_32_s_fu_1278_a_3_address0),
    .a_3_ce0(grp_mmult_hw_float_32_s_fu_1278_a_3_ce0),
    .a_3_q0(a_3_q0),
    .a_4_address0(grp_mmult_hw_float_32_s_fu_1278_a_4_address0),
    .a_4_ce0(grp_mmult_hw_float_32_s_fu_1278_a_4_ce0),
    .a_4_q0(a_4_q0),
    .a_5_address0(grp_mmult_hw_float_32_s_fu_1278_a_5_address0),
    .a_5_ce0(grp_mmult_hw_float_32_s_fu_1278_a_5_ce0),
    .a_5_q0(a_5_q0),
    .a_6_address0(grp_mmult_hw_float_32_s_fu_1278_a_6_address0),
    .a_6_ce0(grp_mmult_hw_float_32_s_fu_1278_a_6_ce0),
    .a_6_q0(a_6_q0),
    .a_7_address0(grp_mmult_hw_float_32_s_fu_1278_a_7_address0),
    .a_7_ce0(grp_mmult_hw_float_32_s_fu_1278_a_7_ce0),
    .a_7_q0(a_7_q0),
    .a_8_address0(grp_mmult_hw_float_32_s_fu_1278_a_8_address0),
    .a_8_ce0(grp_mmult_hw_float_32_s_fu_1278_a_8_ce0),
    .a_8_q0(a_8_q0),
    .a_9_address0(grp_mmult_hw_float_32_s_fu_1278_a_9_address0),
    .a_9_ce0(grp_mmult_hw_float_32_s_fu_1278_a_9_ce0),
    .a_9_q0(a_9_q0),
    .a_10_address0(grp_mmult_hw_float_32_s_fu_1278_a_10_address0),
    .a_10_ce0(grp_mmult_hw_float_32_s_fu_1278_a_10_ce0),
    .a_10_q0(a_10_q0),
    .a_11_address0(grp_mmult_hw_float_32_s_fu_1278_a_11_address0),
    .a_11_ce0(grp_mmult_hw_float_32_s_fu_1278_a_11_ce0),
    .a_11_q0(a_11_q0),
    .a_12_address0(grp_mmult_hw_float_32_s_fu_1278_a_12_address0),
    .a_12_ce0(grp_mmult_hw_float_32_s_fu_1278_a_12_ce0),
    .a_12_q0(a_12_q0),
    .a_13_address0(grp_mmult_hw_float_32_s_fu_1278_a_13_address0),
    .a_13_ce0(grp_mmult_hw_float_32_s_fu_1278_a_13_ce0),
    .a_13_q0(a_13_q0),
    .a_14_address0(grp_mmult_hw_float_32_s_fu_1278_a_14_address0),
    .a_14_ce0(grp_mmult_hw_float_32_s_fu_1278_a_14_ce0),
    .a_14_q0(a_14_q0),
    .a_15_address0(grp_mmult_hw_float_32_s_fu_1278_a_15_address0),
    .a_15_ce0(grp_mmult_hw_float_32_s_fu_1278_a_15_ce0),
    .a_15_q0(a_15_q0),
    .a_16_address0(grp_mmult_hw_float_32_s_fu_1278_a_16_address0),
    .a_16_ce0(grp_mmult_hw_float_32_s_fu_1278_a_16_ce0),
    .a_16_q0(a_16_q0),
    .a_17_address0(grp_mmult_hw_float_32_s_fu_1278_a_17_address0),
    .a_17_ce0(grp_mmult_hw_float_32_s_fu_1278_a_17_ce0),
    .a_17_q0(a_17_q0),
    .a_18_address0(grp_mmult_hw_float_32_s_fu_1278_a_18_address0),
    .a_18_ce0(grp_mmult_hw_float_32_s_fu_1278_a_18_ce0),
    .a_18_q0(a_18_q0),
    .a_19_address0(grp_mmult_hw_float_32_s_fu_1278_a_19_address0),
    .a_19_ce0(grp_mmult_hw_float_32_s_fu_1278_a_19_ce0),
    .a_19_q0(a_19_q0),
    .a_20_address0(grp_mmult_hw_float_32_s_fu_1278_a_20_address0),
    .a_20_ce0(grp_mmult_hw_float_32_s_fu_1278_a_20_ce0),
    .a_20_q0(a_20_q0),
    .a_21_address0(grp_mmult_hw_float_32_s_fu_1278_a_21_address0),
    .a_21_ce0(grp_mmult_hw_float_32_s_fu_1278_a_21_ce0),
    .a_21_q0(a_21_q0),
    .a_22_address0(grp_mmult_hw_float_32_s_fu_1278_a_22_address0),
    .a_22_ce0(grp_mmult_hw_float_32_s_fu_1278_a_22_ce0),
    .a_22_q0(a_22_q0),
    .a_23_address0(grp_mmult_hw_float_32_s_fu_1278_a_23_address0),
    .a_23_ce0(grp_mmult_hw_float_32_s_fu_1278_a_23_ce0),
    .a_23_q0(a_23_q0),
    .a_24_address0(grp_mmult_hw_float_32_s_fu_1278_a_24_address0),
    .a_24_ce0(grp_mmult_hw_float_32_s_fu_1278_a_24_ce0),
    .a_24_q0(a_24_q0),
    .a_25_address0(grp_mmult_hw_float_32_s_fu_1278_a_25_address0),
    .a_25_ce0(grp_mmult_hw_float_32_s_fu_1278_a_25_ce0),
    .a_25_q0(a_25_q0),
    .a_26_address0(grp_mmult_hw_float_32_s_fu_1278_a_26_address0),
    .a_26_ce0(grp_mmult_hw_float_32_s_fu_1278_a_26_ce0),
    .a_26_q0(a_26_q0),
    .a_27_address0(grp_mmult_hw_float_32_s_fu_1278_a_27_address0),
    .a_27_ce0(grp_mmult_hw_float_32_s_fu_1278_a_27_ce0),
    .a_27_q0(a_27_q0),
    .a_28_address0(grp_mmult_hw_float_32_s_fu_1278_a_28_address0),
    .a_28_ce0(grp_mmult_hw_float_32_s_fu_1278_a_28_ce0),
    .a_28_q0(a_28_q0),
    .a_29_address0(grp_mmult_hw_float_32_s_fu_1278_a_29_address0),
    .a_29_ce0(grp_mmult_hw_float_32_s_fu_1278_a_29_ce0),
    .a_29_q0(a_29_q0),
    .a_30_address0(grp_mmult_hw_float_32_s_fu_1278_a_30_address0),
    .a_30_ce0(grp_mmult_hw_float_32_s_fu_1278_a_30_ce0),
    .a_30_q0(a_30_q0),
    .a_31_address0(grp_mmult_hw_float_32_s_fu_1278_a_31_address0),
    .a_31_ce0(grp_mmult_hw_float_32_s_fu_1278_a_31_ce0),
    .a_31_q0(a_31_q0),
    .b_0_address0(grp_mmult_hw_float_32_s_fu_1278_b_0_address0),
    .b_0_ce0(grp_mmult_hw_float_32_s_fu_1278_b_0_ce0),
    .b_0_q0(b_0_q0),
    .b_1_address0(grp_mmult_hw_float_32_s_fu_1278_b_1_address0),
    .b_1_ce0(grp_mmult_hw_float_32_s_fu_1278_b_1_ce0),
    .b_1_q0(b_1_q0),
    .b_2_address0(grp_mmult_hw_float_32_s_fu_1278_b_2_address0),
    .b_2_ce0(grp_mmult_hw_float_32_s_fu_1278_b_2_ce0),
    .b_2_q0(b_2_q0),
    .b_3_address0(grp_mmult_hw_float_32_s_fu_1278_b_3_address0),
    .b_3_ce0(grp_mmult_hw_float_32_s_fu_1278_b_3_ce0),
    .b_3_q0(b_3_q0),
    .b_4_address0(grp_mmult_hw_float_32_s_fu_1278_b_4_address0),
    .b_4_ce0(grp_mmult_hw_float_32_s_fu_1278_b_4_ce0),
    .b_4_q0(b_4_q0),
    .b_5_address0(grp_mmult_hw_float_32_s_fu_1278_b_5_address0),
    .b_5_ce0(grp_mmult_hw_float_32_s_fu_1278_b_5_ce0),
    .b_5_q0(b_5_q0),
    .b_6_address0(grp_mmult_hw_float_32_s_fu_1278_b_6_address0),
    .b_6_ce0(grp_mmult_hw_float_32_s_fu_1278_b_6_ce0),
    .b_6_q0(b_6_q0),
    .b_7_address0(grp_mmult_hw_float_32_s_fu_1278_b_7_address0),
    .b_7_ce0(grp_mmult_hw_float_32_s_fu_1278_b_7_ce0),
    .b_7_q0(b_7_q0),
    .b_8_address0(grp_mmult_hw_float_32_s_fu_1278_b_8_address0),
    .b_8_ce0(grp_mmult_hw_float_32_s_fu_1278_b_8_ce0),
    .b_8_q0(b_8_q0),
    .b_9_address0(grp_mmult_hw_float_32_s_fu_1278_b_9_address0),
    .b_9_ce0(grp_mmult_hw_float_32_s_fu_1278_b_9_ce0),
    .b_9_q0(b_9_q0),
    .b_10_address0(grp_mmult_hw_float_32_s_fu_1278_b_10_address0),
    .b_10_ce0(grp_mmult_hw_float_32_s_fu_1278_b_10_ce0),
    .b_10_q0(b_10_q0),
    .b_11_address0(grp_mmult_hw_float_32_s_fu_1278_b_11_address0),
    .b_11_ce0(grp_mmult_hw_float_32_s_fu_1278_b_11_ce0),
    .b_11_q0(b_11_q0),
    .b_12_address0(grp_mmult_hw_float_32_s_fu_1278_b_12_address0),
    .b_12_ce0(grp_mmult_hw_float_32_s_fu_1278_b_12_ce0),
    .b_12_q0(b_12_q0),
    .b_13_address0(grp_mmult_hw_float_32_s_fu_1278_b_13_address0),
    .b_13_ce0(grp_mmult_hw_float_32_s_fu_1278_b_13_ce0),
    .b_13_q0(b_13_q0),
    .b_14_address0(grp_mmult_hw_float_32_s_fu_1278_b_14_address0),
    .b_14_ce0(grp_mmult_hw_float_32_s_fu_1278_b_14_ce0),
    .b_14_q0(b_14_q0),
    .b_15_address0(grp_mmult_hw_float_32_s_fu_1278_b_15_address0),
    .b_15_ce0(grp_mmult_hw_float_32_s_fu_1278_b_15_ce0),
    .b_15_q0(b_15_q0),
    .b_16_address0(grp_mmult_hw_float_32_s_fu_1278_b_16_address0),
    .b_16_ce0(grp_mmult_hw_float_32_s_fu_1278_b_16_ce0),
    .b_16_q0(b_16_q0),
    .b_17_address0(grp_mmult_hw_float_32_s_fu_1278_b_17_address0),
    .b_17_ce0(grp_mmult_hw_float_32_s_fu_1278_b_17_ce0),
    .b_17_q0(b_17_q0),
    .b_18_address0(grp_mmult_hw_float_32_s_fu_1278_b_18_address0),
    .b_18_ce0(grp_mmult_hw_float_32_s_fu_1278_b_18_ce0),
    .b_18_q0(b_18_q0),
    .b_19_address0(grp_mmult_hw_float_32_s_fu_1278_b_19_address0),
    .b_19_ce0(grp_mmult_hw_float_32_s_fu_1278_b_19_ce0),
    .b_19_q0(b_19_q0),
    .b_20_address0(grp_mmult_hw_float_32_s_fu_1278_b_20_address0),
    .b_20_ce0(grp_mmult_hw_float_32_s_fu_1278_b_20_ce0),
    .b_20_q0(b_20_q0),
    .b_21_address0(grp_mmult_hw_float_32_s_fu_1278_b_21_address0),
    .b_21_ce0(grp_mmult_hw_float_32_s_fu_1278_b_21_ce0),
    .b_21_q0(b_21_q0),
    .b_22_address0(grp_mmult_hw_float_32_s_fu_1278_b_22_address0),
    .b_22_ce0(grp_mmult_hw_float_32_s_fu_1278_b_22_ce0),
    .b_22_q0(b_22_q0),
    .b_23_address0(grp_mmult_hw_float_32_s_fu_1278_b_23_address0),
    .b_23_ce0(grp_mmult_hw_float_32_s_fu_1278_b_23_ce0),
    .b_23_q0(b_23_q0),
    .b_24_address0(grp_mmult_hw_float_32_s_fu_1278_b_24_address0),
    .b_24_ce0(grp_mmult_hw_float_32_s_fu_1278_b_24_ce0),
    .b_24_q0(b_24_q0),
    .b_25_address0(grp_mmult_hw_float_32_s_fu_1278_b_25_address0),
    .b_25_ce0(grp_mmult_hw_float_32_s_fu_1278_b_25_ce0),
    .b_25_q0(b_25_q0),
    .b_26_address0(grp_mmult_hw_float_32_s_fu_1278_b_26_address0),
    .b_26_ce0(grp_mmult_hw_float_32_s_fu_1278_b_26_ce0),
    .b_26_q0(b_26_q0),
    .b_27_address0(grp_mmult_hw_float_32_s_fu_1278_b_27_address0),
    .b_27_ce0(grp_mmult_hw_float_32_s_fu_1278_b_27_ce0),
    .b_27_q0(b_27_q0),
    .b_28_address0(grp_mmult_hw_float_32_s_fu_1278_b_28_address0),
    .b_28_ce0(grp_mmult_hw_float_32_s_fu_1278_b_28_ce0),
    .b_28_q0(b_28_q0),
    .b_29_address0(grp_mmult_hw_float_32_s_fu_1278_b_29_address0),
    .b_29_ce0(grp_mmult_hw_float_32_s_fu_1278_b_29_ce0),
    .b_29_q0(b_29_q0),
    .b_30_address0(grp_mmult_hw_float_32_s_fu_1278_b_30_address0),
    .b_30_ce0(grp_mmult_hw_float_32_s_fu_1278_b_30_ce0),
    .b_30_q0(b_30_q0),
    .b_31_address0(grp_mmult_hw_float_32_s_fu_1278_b_31_address0),
    .b_31_ce0(grp_mmult_hw_float_32_s_fu_1278_b_31_ce0),
    .b_31_q0(b_31_q0),
    .out_r_address0(grp_mmult_hw_float_32_s_fu_1278_out_r_address0),
    .out_r_ce0(grp_mmult_hw_float_32_s_fu_1278_out_r_ce0),
    .out_r_we0(grp_mmult_hw_float_32_s_fu_1278_out_r_we0),
    .out_r_d0(grp_mmult_hw_float_32_s_fu_1278_out_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_STREAM_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == INPUT_STREAM_data_V_0_ack_out) & (1'b1 == INPUT_STREAM_data_V_0_vld_out))) begin
            INPUT_STREAM_data_V_0_sel_rd <= ~INPUT_STREAM_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_STREAM_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == INPUT_STREAM_data_V_0_vld_in) & (1'b1 == INPUT_STREAM_data_V_0_ack_in))) begin
            INPUT_STREAM_data_V_0_sel_wr <= ~INPUT_STREAM_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_STREAM_data_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == INPUT_STREAM_data_V_0_vld_in) & (1'b1 == INPUT_STREAM_data_V_0_ack_out) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == INPUT_STREAM_data_V_0_vld_in) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_2)))) begin
            INPUT_STREAM_data_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == INPUT_STREAM_data_V_0_vld_in) & (1'b0 == INPUT_STREAM_data_V_0_ack_out) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_3)) | ((1'b0 == INPUT_STREAM_data_V_0_ack_out) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_1)))) begin
            INPUT_STREAM_data_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == INPUT_STREAM_data_V_0_vld_in) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_2)) | ((1'b1 == INPUT_STREAM_data_V_0_ack_out) & (INPUT_STREAM_data_V_0_state == ap_const_lv2_1)) | ((INPUT_STREAM_data_V_0_state == ap_const_lv2_3) & ~((1'b1 == INPUT_STREAM_data_V_0_vld_in) & (1'b0 == INPUT_STREAM_data_V_0_ack_out)) & ~((1'b0 == INPUT_STREAM_data_V_0_vld_in) & (1'b1 == INPUT_STREAM_data_V_0_ack_out))))) begin
            INPUT_STREAM_data_V_0_state <= ap_const_lv2_3;
        end else begin
            INPUT_STREAM_data_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        INPUT_STREAM_dest_V_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == INPUT_STREAM_dest_V_0_vld_in) & (1'b1 == INPUT_STREAM_dest_V_0_ack_out) & (ap_const_lv2_3 == INPUT_STREAM_dest_V_0_state)) | ((1'b0 == INPUT_STREAM_dest_V_0_vld_in) & (ap_const_lv2_2 == INPUT_STREAM_dest_V_0_state)))) begin
            INPUT_STREAM_dest_V_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == INPUT_STREAM_dest_V_0_vld_in) & (1'b0 == INPUT_STREAM_dest_V_0_ack_out) & (ap_const_lv2_3 == INPUT_STREAM_dest_V_0_state)) | ((1'b0 == INPUT_STREAM_dest_V_0_ack_out) & (ap_const_lv2_1 == INPUT_STREAM_dest_V_0_state)))) begin
            INPUT_STREAM_dest_V_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == INPUT_STREAM_dest_V_0_vld_in) & (ap_const_lv2_2 == INPUT_STREAM_dest_V_0_state)) | ((1'b1 == INPUT_STREAM_dest_V_0_ack_out) & (ap_const_lv2_1 == INPUT_STREAM_dest_V_0_state)) | ((ap_const_lv2_3 == INPUT_STREAM_dest_V_0_state) & ~((1'b1 == INPUT_STREAM_dest_V_0_vld_in) & (1'b0 == INPUT_STREAM_dest_V_0_ack_out)) & ~((1'b0 == INPUT_STREAM_dest_V_0_vld_in) & (1'b1 == INPUT_STREAM_dest_V_0_ack_out))))) begin
            INPUT_STREAM_dest_V_0_state <= ap_const_lv2_3;
        end else begin
            INPUT_STREAM_dest_V_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_data_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_data_V_1_vld_out))) begin
            OUTPUT_STREAM_data_V_1_sel_rd <= ~OUTPUT_STREAM_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_data_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_data_V_1_ack_in))) begin
            OUTPUT_STREAM_data_V_1_sel_wr <= ~OUTPUT_STREAM_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_data_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_data_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_data_V_1_state)) | ((1'b0 == OUTPUT_STREAM_data_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_data_V_1_state)))) begin
            OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_data_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_data_V_1_state)) | ((1'b0 == OUTPUT_STREAM_data_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_data_V_1_state)))) begin
            OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_data_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_data_V_1_state)) | ((1'b1 == OUTPUT_STREAM_data_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_data_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_data_V_1_state) & ~((1'b1 == OUTPUT_STREAM_data_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_data_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_data_V_1_ack_out))))) begin
            OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_dest_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_dest_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_dest_V_1_vld_out))) begin
            OUTPUT_STREAM_dest_V_1_sel_rd <= ~OUTPUT_STREAM_dest_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_dest_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_dest_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_dest_V_1_state)) | ((1'b0 == OUTPUT_STREAM_dest_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_dest_V_1_state)))) begin
            OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_dest_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_dest_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_dest_V_1_state)) | ((1'b0 == OUTPUT_STREAM_dest_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_dest_V_1_state)))) begin
            OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_dest_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_dest_V_1_state)) | ((1'b1 == OUTPUT_STREAM_dest_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_dest_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_dest_V_1_state) & ~((1'b1 == OUTPUT_STREAM_dest_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_dest_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_dest_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_dest_V_1_ack_out))))) begin
            OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_id_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_id_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_id_V_1_vld_out))) begin
            OUTPUT_STREAM_id_V_1_sel_rd <= ~OUTPUT_STREAM_id_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_id_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_id_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_id_V_1_state)) | ((1'b0 == OUTPUT_STREAM_id_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_id_V_1_state)))) begin
            OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_id_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_id_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_id_V_1_state)) | ((1'b0 == OUTPUT_STREAM_id_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_id_V_1_state)))) begin
            OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_id_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_id_V_1_state)) | ((1'b1 == OUTPUT_STREAM_id_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_id_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_id_V_1_state) & ~((1'b1 == OUTPUT_STREAM_id_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_id_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_id_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_id_V_1_ack_out))))) begin
            OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_keep_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_keep_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_keep_V_1_vld_out))) begin
            OUTPUT_STREAM_keep_V_1_sel_rd <= ~OUTPUT_STREAM_keep_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_keep_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_keep_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_keep_V_1_state)) | ((1'b0 == OUTPUT_STREAM_keep_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_keep_V_1_state)))) begin
            OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_keep_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_keep_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_keep_V_1_state)) | ((1'b0 == OUTPUT_STREAM_keep_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_keep_V_1_state)))) begin
            OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_keep_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_keep_V_1_state)) | ((1'b1 == OUTPUT_STREAM_keep_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_keep_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_keep_V_1_state) & ~((1'b1 == OUTPUT_STREAM_keep_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_keep_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_keep_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_keep_V_1_ack_out))))) begin
            OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_last_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_last_V_1_vld_out))) begin
            OUTPUT_STREAM_last_V_1_sel_rd <= ~OUTPUT_STREAM_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_last_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_last_V_1_ack_in))) begin
            OUTPUT_STREAM_last_V_1_sel_wr <= ~OUTPUT_STREAM_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_last_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_last_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_last_V_1_state)) | ((1'b0 == OUTPUT_STREAM_last_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_last_V_1_state)))) begin
            OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_last_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_last_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_last_V_1_state)) | ((1'b0 == OUTPUT_STREAM_last_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_last_V_1_state)))) begin
            OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_last_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_last_V_1_state)) | ((1'b1 == OUTPUT_STREAM_last_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_last_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_last_V_1_state) & ~((1'b1 == OUTPUT_STREAM_last_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_last_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_last_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_last_V_1_ack_out))))) begin
            OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_strb_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_strb_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_strb_V_1_vld_out))) begin
            OUTPUT_STREAM_strb_V_1_sel_rd <= ~OUTPUT_STREAM_strb_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_strb_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_strb_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_strb_V_1_state)) | ((1'b0 == OUTPUT_STREAM_strb_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_strb_V_1_state)))) begin
            OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_strb_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_strb_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_strb_V_1_state)) | ((1'b0 == OUTPUT_STREAM_strb_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_strb_V_1_state)))) begin
            OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_strb_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_strb_V_1_state)) | ((1'b1 == OUTPUT_STREAM_strb_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_strb_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_strb_V_1_state) & ~((1'b1 == OUTPUT_STREAM_strb_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_strb_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_strb_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_strb_V_1_ack_out))))) begin
            OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == OUTPUT_STREAM_user_V_1_ack_out) & (1'b1 == OUTPUT_STREAM_user_V_1_vld_out))) begin
            OUTPUT_STREAM_user_V_1_sel_rd <= ~OUTPUT_STREAM_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == OUTPUT_STREAM_user_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_user_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_user_V_1_state)) | ((1'b0 == OUTPUT_STREAM_user_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_user_V_1_state)))) begin
            OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == OUTPUT_STREAM_user_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_user_V_1_ack_out) & (ap_const_lv2_3 == OUTPUT_STREAM_user_V_1_state)) | ((1'b0 == OUTPUT_STREAM_user_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_user_V_1_state)))) begin
            OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == OUTPUT_STREAM_user_V_1_vld_in) & (ap_const_lv2_2 == OUTPUT_STREAM_user_V_1_state)) | ((1'b1 == OUTPUT_STREAM_user_V_1_ack_out) & (ap_const_lv2_1 == OUTPUT_STREAM_user_V_1_state)) | ((ap_const_lv2_3 == OUTPUT_STREAM_user_V_1_state) & ~((1'b1 == OUTPUT_STREAM_user_V_1_vld_in) & (1'b0 == OUTPUT_STREAM_user_V_1_ack_out)) & ~((1'b0 == OUTPUT_STREAM_user_V_1_vld_in) & (1'b1 == OUTPUT_STREAM_user_V_1_ack_out))))) begin
            OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_3;
        end else begin
            OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond_flatten_fu_1351_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond_flatten_fu_1351_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond_flatten_fu_1351_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond_flatten1_fu_1472_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond_flatten1_fu_1472_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & ~(1'b0 == exitcond_flatten1_fu_1472_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & ~(1'b0 == exitcond_flatten2_fu_1593_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b0 == exitcond_flatten2_fu_1593_p2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & ~(1'b0 == exitcond_flatten2_fu_1593_p2)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done))) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= 1'b1;
        end else if ((1'b1 == grp_mmult_hw_float_32_s_fu_1278_ap_ready)) begin
            ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i1_0_i_reg_1223 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        i1_0_i_reg_1223 <= i1_0_i_t_mid2_v_reg_1737;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        i4_0_i_reg_1256 <= i4_0_i_cast4_mid2_v_reg_1760;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done))) begin
        i4_0_i_reg_1256 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        i_0_i_reg_1190 <= i_0_i_cast8_mid2_v_reg_1708;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_0_i_reg_1190 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten1_reg_1212 <= ap_const_lv11_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond_flatten1_fu_1472_p2))) begin
        indvar_flatten1_reg_1212 <= indvar_flatten_next2_fu_1478_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten2_fu_1593_p2))) begin
        indvar_flatten2_reg_1245 <= indvar_flatten_next1_fu_1599_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done))) begin
        indvar_flatten2_reg_1245 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond_flatten_fu_1351_p2))) begin
        indvar_flatten_reg_1179 <= indvar_flatten_next_fu_1357_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_1179 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j2_0_i_reg_1234 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond_flatten1_fu_1472_p2))) begin
        j2_0_i_reg_1234 <= j_1_fu_1516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten2_fu_1593_p2))) begin
        j5_0_i_reg_1267 <= j_2_fu_1688_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done))) begin
        j5_0_i_reg_1267 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond_flatten_fu_1351_p2))) begin
        j_0_i_reg_1201 <= j_fu_1395_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        j_0_i_reg_1201 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == INPUT_STREAM_data_V_0_load_A)) begin
        INPUT_STREAM_data_V_0_payload_A <= INPUT_STREAM_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == INPUT_STREAM_data_V_0_load_B)) begin
        INPUT_STREAM_data_V_0_payload_B <= INPUT_STREAM_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_STREAM_data_V_1_load_A)) begin
        OUTPUT_STREAM_data_V_1_payload_A <= val_assign_fu_1694_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_STREAM_data_V_1_load_B)) begin
        OUTPUT_STREAM_data_V_1_payload_B <= val_assign_fu_1694_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_STREAM_last_V_1_load_A)) begin
        OUTPUT_STREAM_last_V_1_payload_A <= last_assign_reg_1770;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == OUTPUT_STREAM_last_V_1_load_B)) begin
        OUTPUT_STREAM_last_V_1_payload_B <= last_assign_reg_1770;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751 <= exitcond_flatten2_reg_1751;
        exitcond_flatten2_reg_1751 <= exitcond_flatten2_fu_1593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        exitcond_flatten1_reg_1723 <= exitcond_flatten1_fu_1472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        exitcond_flatten_reg_1699 <= exitcond_flatten_fu_1351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond_flatten1_fu_1472_p2))) begin
        i1_0_i_t_mid2_v_reg_1737 <= i1_0_i_t_mid2_v_fu_1504_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond_flatten2_fu_1593_p2))) begin
        i4_0_i_cast4_mid2_v_reg_1760 <= i4_0_i_cast4_mid2_v_fu_1625_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond_flatten_fu_1351_p2))) begin
        i_0_i_cast8_mid2_v_reg_1708 <= i_0_i_cast8_mid2_v_fu_1383_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond_flatten1_fu_1472_p2))) begin
        j2_0_i_mid2_reg_1732 <= j2_0_i_mid2_fu_1496_p3;
        tmp_2_reg_1742 <= tmp_2_fu_1512_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b0 == exitcond_flatten2_fu_1593_p2))) begin
        last_assign_reg_1770 <= last_assign_fu_1682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b0 == exitcond_flatten_fu_1351_p2))) begin
        tmp_1_reg_1714 <= tmp_1_fu_1391_p1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723)))) begin
        INPUT_STREAM_TDATA_blk_n = INPUT_STREAM_data_V_0_state[1'b0];
    end else begin
        INPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0))))) begin
        INPUT_STREAM_data_V_0_ack_out = 1'b1;
    end else begin
        INPUT_STREAM_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == INPUT_STREAM_data_V_0_sel)) begin
        INPUT_STREAM_data_V_0_data_out = INPUT_STREAM_data_V_0_payload_B;
    end else begin
        INPUT_STREAM_data_V_0_data_out = INPUT_STREAM_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0))))) begin
        INPUT_STREAM_dest_V_0_ack_out = 1'b1;
    end else begin
        INPUT_STREAM_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)))) begin
        OUTPUT_STREAM_TDATA_blk_n = OUTPUT_STREAM_data_V_1_state[1'b1];
    end else begin
        OUTPUT_STREAM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == OUTPUT_STREAM_data_V_1_sel)) begin
        OUTPUT_STREAM_data_V_1_data_out = OUTPUT_STREAM_data_V_1_payload_B;
    end else begin
        OUTPUT_STREAM_data_V_1_data_out = OUTPUT_STREAM_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_data_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_dest_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_id_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_keep_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_keep_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == OUTPUT_STREAM_last_V_1_sel)) begin
        OUTPUT_STREAM_last_V_1_data_out = OUTPUT_STREAM_last_V_1_payload_B;
    end else begin
        OUTPUT_STREAM_last_V_1_data_out = OUTPUT_STREAM_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_last_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_strb_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_strb_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))))) begin
        OUTPUT_STREAM_user_V_1_vld_in = 1'b1;
    end else begin
        OUTPUT_STREAM_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_0_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_0_address0 = grp_mmult_hw_float_32_s_fu_1278_a_0_address0;
    end else begin
        a_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_0_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_0_ce0;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_0))) begin
        a_0_we0 = 1'b1;
    end else begin
        a_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_10_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_10_address0 = grp_mmult_hw_float_32_s_fu_1278_a_10_address0;
    end else begin
        a_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_10_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_10_ce0;
    end else begin
        a_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_A))) begin
        a_10_we0 = 1'b1;
    end else begin
        a_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_11_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_11_address0 = grp_mmult_hw_float_32_s_fu_1278_a_11_address0;
    end else begin
        a_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_11_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_11_ce0;
    end else begin
        a_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_B))) begin
        a_11_we0 = 1'b1;
    end else begin
        a_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_12_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_12_address0 = grp_mmult_hw_float_32_s_fu_1278_a_12_address0;
    end else begin
        a_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_12_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_12_ce0;
    end else begin
        a_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_C))) begin
        a_12_we0 = 1'b1;
    end else begin
        a_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_13_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_13_address0 = grp_mmult_hw_float_32_s_fu_1278_a_13_address0;
    end else begin
        a_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_13_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_13_ce0;
    end else begin
        a_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_D))) begin
        a_13_we0 = 1'b1;
    end else begin
        a_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_14_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_14_address0 = grp_mmult_hw_float_32_s_fu_1278_a_14_address0;
    end else begin
        a_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_14_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_14_ce0;
    end else begin
        a_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_E))) begin
        a_14_we0 = 1'b1;
    end else begin
        a_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_15_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_15_address0 = grp_mmult_hw_float_32_s_fu_1278_a_15_address0;
    end else begin
        a_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_15_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_15_ce0;
    end else begin
        a_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_F))) begin
        a_15_we0 = 1'b1;
    end else begin
        a_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_16_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_16_address0 = grp_mmult_hw_float_32_s_fu_1278_a_16_address0;
    end else begin
        a_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_16_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_16_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_16_ce0;
    end else begin
        a_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_10))) begin
        a_16_we0 = 1'b1;
    end else begin
        a_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_17_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_17_address0 = grp_mmult_hw_float_32_s_fu_1278_a_17_address0;
    end else begin
        a_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_17_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_17_ce0;
    end else begin
        a_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_11))) begin
        a_17_we0 = 1'b1;
    end else begin
        a_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_18_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_18_address0 = grp_mmult_hw_float_32_s_fu_1278_a_18_address0;
    end else begin
        a_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_18_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_18_ce0;
    end else begin
        a_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_12))) begin
        a_18_we0 = 1'b1;
    end else begin
        a_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_19_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_19_address0 = grp_mmult_hw_float_32_s_fu_1278_a_19_address0;
    end else begin
        a_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_19_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_19_ce0;
    end else begin
        a_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_13))) begin
        a_19_we0 = 1'b1;
    end else begin
        a_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_1_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_1_address0 = grp_mmult_hw_float_32_s_fu_1278_a_1_address0;
    end else begin
        a_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_1_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_1_ce0;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1))) begin
        a_1_we0 = 1'b1;
    end else begin
        a_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_20_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_20_address0 = grp_mmult_hw_float_32_s_fu_1278_a_20_address0;
    end else begin
        a_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_20_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_20_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_20_ce0;
    end else begin
        a_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_14))) begin
        a_20_we0 = 1'b1;
    end else begin
        a_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_21_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_21_address0 = grp_mmult_hw_float_32_s_fu_1278_a_21_address0;
    end else begin
        a_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_21_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_21_ce0;
    end else begin
        a_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_15))) begin
        a_21_we0 = 1'b1;
    end else begin
        a_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_22_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_22_address0 = grp_mmult_hw_float_32_s_fu_1278_a_22_address0;
    end else begin
        a_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_22_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_22_ce0;
    end else begin
        a_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_16))) begin
        a_22_we0 = 1'b1;
    end else begin
        a_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_23_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_23_address0 = grp_mmult_hw_float_32_s_fu_1278_a_23_address0;
    end else begin
        a_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_23_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_23_ce0;
    end else begin
        a_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_17))) begin
        a_23_we0 = 1'b1;
    end else begin
        a_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_24_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_24_address0 = grp_mmult_hw_float_32_s_fu_1278_a_24_address0;
    end else begin
        a_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_24_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_24_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_24_ce0;
    end else begin
        a_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_18))) begin
        a_24_we0 = 1'b1;
    end else begin
        a_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_25_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_25_address0 = grp_mmult_hw_float_32_s_fu_1278_a_25_address0;
    end else begin
        a_25_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_25_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_25_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_25_ce0;
    end else begin
        a_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_19))) begin
        a_25_we0 = 1'b1;
    end else begin
        a_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_26_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_26_address0 = grp_mmult_hw_float_32_s_fu_1278_a_26_address0;
    end else begin
        a_26_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_26_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_26_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_26_ce0;
    end else begin
        a_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1A))) begin
        a_26_we0 = 1'b1;
    end else begin
        a_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_27_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_27_address0 = grp_mmult_hw_float_32_s_fu_1278_a_27_address0;
    end else begin
        a_27_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_27_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_27_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_27_ce0;
    end else begin
        a_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1B))) begin
        a_27_we0 = 1'b1;
    end else begin
        a_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_28_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_28_address0 = grp_mmult_hw_float_32_s_fu_1278_a_28_address0;
    end else begin
        a_28_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_28_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_28_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_28_ce0;
    end else begin
        a_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1C))) begin
        a_28_we0 = 1'b1;
    end else begin
        a_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_29_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_29_address0 = grp_mmult_hw_float_32_s_fu_1278_a_29_address0;
    end else begin
        a_29_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_29_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_29_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_29_ce0;
    end else begin
        a_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1D))) begin
        a_29_we0 = 1'b1;
    end else begin
        a_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_2_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_2_address0 = grp_mmult_hw_float_32_s_fu_1278_a_2_address0;
    end else begin
        a_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_2_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_2_ce0;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_2))) begin
        a_2_we0 = 1'b1;
    end else begin
        a_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_30_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_30_address0 = grp_mmult_hw_float_32_s_fu_1278_a_30_address0;
    end else begin
        a_30_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_30_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_30_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_30_ce0;
    end else begin
        a_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1E))) begin
        a_30_we0 = 1'b1;
    end else begin
        a_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_31_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_31_address0 = grp_mmult_hw_float_32_s_fu_1278_a_31_address0;
    end else begin
        a_31_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_31_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_31_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_31_ce0;
    end else begin
        a_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_1F))) begin
        a_31_we0 = 1'b1;
    end else begin
        a_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_3_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_3_address0 = grp_mmult_hw_float_32_s_fu_1278_a_3_address0;
    end else begin
        a_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_3_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_3_ce0;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_3))) begin
        a_3_we0 = 1'b1;
    end else begin
        a_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_4_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_4_address0 = grp_mmult_hw_float_32_s_fu_1278_a_4_address0;
    end else begin
        a_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_4_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_4_ce0;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_4))) begin
        a_4_we0 = 1'b1;
    end else begin
        a_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_5_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_5_address0 = grp_mmult_hw_float_32_s_fu_1278_a_5_address0;
    end else begin
        a_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_5_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_5_ce0;
    end else begin
        a_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_5))) begin
        a_5_we0 = 1'b1;
    end else begin
        a_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_6_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_6_address0 = grp_mmult_hw_float_32_s_fu_1278_a_6_address0;
    end else begin
        a_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_6_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_6_ce0;
    end else begin
        a_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_6))) begin
        a_6_we0 = 1'b1;
    end else begin
        a_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_7_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_7_address0 = grp_mmult_hw_float_32_s_fu_1278_a_7_address0;
    end else begin
        a_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_7_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_7_ce0;
    end else begin
        a_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_7))) begin
        a_7_we0 = 1'b1;
    end else begin
        a_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_8_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_8_address0 = grp_mmult_hw_float_32_s_fu_1278_a_8_address0;
    end else begin
        a_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_8_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_8_ce0;
    end else begin
        a_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_8))) begin
        a_8_we0 = 1'b1;
    end else begin
        a_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        a_9_address0 = i_0_i_cast8_mid2_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_9_address0 = grp_mmult_hw_float_32_s_fu_1278_a_9_address0;
    end else begin
        a_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        a_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_9_ce0 = grp_mmult_hw_float_32_s_fu_1278_a_9_ce0;
    end else begin
        a_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_1_reg_1714 == ap_const_lv5_9))) begin
        a_9_we0 = 1'b1;
    end else begin
        a_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~(ap_condition_2362 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & ~(ap_condition_2362 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_0_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_0_address0 = grp_mmult_hw_float_32_s_fu_1278_b_0_address0;
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_0_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_0_ce0;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_0))) begin
        b_0_we0 = 1'b1;
    end else begin
        b_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_10_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_10_address0 = grp_mmult_hw_float_32_s_fu_1278_b_10_address0;
    end else begin
        b_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_10_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_10_ce0;
    end else begin
        b_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_A))) begin
        b_10_we0 = 1'b1;
    end else begin
        b_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_11_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_11_address0 = grp_mmult_hw_float_32_s_fu_1278_b_11_address0;
    end else begin
        b_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_11_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_11_ce0;
    end else begin
        b_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_B))) begin
        b_11_we0 = 1'b1;
    end else begin
        b_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_12_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_12_address0 = grp_mmult_hw_float_32_s_fu_1278_b_12_address0;
    end else begin
        b_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_12_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_12_ce0;
    end else begin
        b_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_C))) begin
        b_12_we0 = 1'b1;
    end else begin
        b_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_13_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_13_address0 = grp_mmult_hw_float_32_s_fu_1278_b_13_address0;
    end else begin
        b_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_13_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_13_ce0;
    end else begin
        b_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_D))) begin
        b_13_we0 = 1'b1;
    end else begin
        b_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_14_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_14_address0 = grp_mmult_hw_float_32_s_fu_1278_b_14_address0;
    end else begin
        b_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_14_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_14_ce0;
    end else begin
        b_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_E))) begin
        b_14_we0 = 1'b1;
    end else begin
        b_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_15_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_15_address0 = grp_mmult_hw_float_32_s_fu_1278_b_15_address0;
    end else begin
        b_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_15_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_15_ce0;
    end else begin
        b_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_F))) begin
        b_15_we0 = 1'b1;
    end else begin
        b_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_16_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_16_address0 = grp_mmult_hw_float_32_s_fu_1278_b_16_address0;
    end else begin
        b_16_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_16_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_16_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_16_ce0;
    end else begin
        b_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_10))) begin
        b_16_we0 = 1'b1;
    end else begin
        b_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_17_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_17_address0 = grp_mmult_hw_float_32_s_fu_1278_b_17_address0;
    end else begin
        b_17_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_17_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_17_ce0;
    end else begin
        b_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_11))) begin
        b_17_we0 = 1'b1;
    end else begin
        b_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_18_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_18_address0 = grp_mmult_hw_float_32_s_fu_1278_b_18_address0;
    end else begin
        b_18_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_18_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_18_ce0;
    end else begin
        b_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_12))) begin
        b_18_we0 = 1'b1;
    end else begin
        b_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_19_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_19_address0 = grp_mmult_hw_float_32_s_fu_1278_b_19_address0;
    end else begin
        b_19_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_19_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_19_ce0;
    end else begin
        b_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_13))) begin
        b_19_we0 = 1'b1;
    end else begin
        b_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_1_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_1_address0 = grp_mmult_hw_float_32_s_fu_1278_b_1_address0;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_1_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_1_ce0;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1))) begin
        b_1_we0 = 1'b1;
    end else begin
        b_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_20_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_20_address0 = grp_mmult_hw_float_32_s_fu_1278_b_20_address0;
    end else begin
        b_20_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_20_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_20_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_20_ce0;
    end else begin
        b_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_14))) begin
        b_20_we0 = 1'b1;
    end else begin
        b_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_21_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_21_address0 = grp_mmult_hw_float_32_s_fu_1278_b_21_address0;
    end else begin
        b_21_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_21_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_21_ce0;
    end else begin
        b_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_15))) begin
        b_21_we0 = 1'b1;
    end else begin
        b_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_22_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_22_address0 = grp_mmult_hw_float_32_s_fu_1278_b_22_address0;
    end else begin
        b_22_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_22_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_22_ce0;
    end else begin
        b_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_16))) begin
        b_22_we0 = 1'b1;
    end else begin
        b_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_23_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_23_address0 = grp_mmult_hw_float_32_s_fu_1278_b_23_address0;
    end else begin
        b_23_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_23_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_23_ce0;
    end else begin
        b_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_17))) begin
        b_23_we0 = 1'b1;
    end else begin
        b_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_24_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_24_address0 = grp_mmult_hw_float_32_s_fu_1278_b_24_address0;
    end else begin
        b_24_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_24_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_24_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_24_ce0;
    end else begin
        b_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_18))) begin
        b_24_we0 = 1'b1;
    end else begin
        b_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_25_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_25_address0 = grp_mmult_hw_float_32_s_fu_1278_b_25_address0;
    end else begin
        b_25_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_25_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_25_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_25_ce0;
    end else begin
        b_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_19))) begin
        b_25_we0 = 1'b1;
    end else begin
        b_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_26_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_26_address0 = grp_mmult_hw_float_32_s_fu_1278_b_26_address0;
    end else begin
        b_26_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_26_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_26_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_26_ce0;
    end else begin
        b_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1A))) begin
        b_26_we0 = 1'b1;
    end else begin
        b_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_27_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_27_address0 = grp_mmult_hw_float_32_s_fu_1278_b_27_address0;
    end else begin
        b_27_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_27_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_27_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_27_ce0;
    end else begin
        b_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1B))) begin
        b_27_we0 = 1'b1;
    end else begin
        b_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_28_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_28_address0 = grp_mmult_hw_float_32_s_fu_1278_b_28_address0;
    end else begin
        b_28_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_28_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_28_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_28_ce0;
    end else begin
        b_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1C))) begin
        b_28_we0 = 1'b1;
    end else begin
        b_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_29_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_29_address0 = grp_mmult_hw_float_32_s_fu_1278_b_29_address0;
    end else begin
        b_29_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_29_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_29_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_29_ce0;
    end else begin
        b_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1D))) begin
        b_29_we0 = 1'b1;
    end else begin
        b_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_2_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_2_address0 = grp_mmult_hw_float_32_s_fu_1278_b_2_address0;
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_2_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_2_ce0;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_2))) begin
        b_2_we0 = 1'b1;
    end else begin
        b_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_30_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_30_address0 = grp_mmult_hw_float_32_s_fu_1278_b_30_address0;
    end else begin
        b_30_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_30_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_30_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_30_ce0;
    end else begin
        b_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1E))) begin
        b_30_we0 = 1'b1;
    end else begin
        b_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_31_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_31_address0 = grp_mmult_hw_float_32_s_fu_1278_b_31_address0;
    end else begin
        b_31_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_31_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_31_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_31_ce0;
    end else begin
        b_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_1F))) begin
        b_31_we0 = 1'b1;
    end else begin
        b_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_3_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_3_address0 = grp_mmult_hw_float_32_s_fu_1278_b_3_address0;
    end else begin
        b_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_3_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_3_ce0;
    end else begin
        b_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_3))) begin
        b_3_we0 = 1'b1;
    end else begin
        b_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_4_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_4_address0 = grp_mmult_hw_float_32_s_fu_1278_b_4_address0;
    end else begin
        b_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_4_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_4_ce0;
    end else begin
        b_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_4))) begin
        b_4_we0 = 1'b1;
    end else begin
        b_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_5_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_5_address0 = grp_mmult_hw_float_32_s_fu_1278_b_5_address0;
    end else begin
        b_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_5_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_5_ce0;
    end else begin
        b_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_5))) begin
        b_5_we0 = 1'b1;
    end else begin
        b_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_6_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_6_address0 = grp_mmult_hw_float_32_s_fu_1278_b_6_address0;
    end else begin
        b_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_6_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_6_ce0;
    end else begin
        b_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_6))) begin
        b_6_we0 = 1'b1;
    end else begin
        b_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_7_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_7_address0 = grp_mmult_hw_float_32_s_fu_1278_b_7_address0;
    end else begin
        b_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_7_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_7_ce0;
    end else begin
        b_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_7))) begin
        b_7_we0 = 1'b1;
    end else begin
        b_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_8_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_8_address0 = grp_mmult_hw_float_32_s_fu_1278_b_8_address0;
    end else begin
        b_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_8_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_8_ce0;
    end else begin
        b_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_8))) begin
        b_8_we0 = 1'b1;
    end else begin
        b_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        b_9_address0 = j2_0_i_cast5_fu_1522_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_9_address0 = grp_mmult_hw_float_32_s_fu_1278_b_9_address0;
    end else begin
        b_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)))) begin
        b_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_9_ce0 = grp_mmult_hw_float_32_s_fu_1278_b_9_ce0;
    end else begin
        b_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (tmp_2_reg_1742 == ap_const_lv5_9))) begin
        b_9_we0 = 1'b1;
    end else begin
        b_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723))) begin
        i1_0_i_phi_fu_1227_p4 = i1_0_i_t_mid2_v_reg_1737;
    end else begin
        i1_0_i_phi_fu_1227_p4 = i1_0_i_reg_1223;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751))) begin
        i4_0_i_phi_fu_1260_p4 = i4_0_i_cast4_mid2_v_reg_1760;
    end else begin
        i4_0_i_phi_fu_1260_p4 = i4_0_i_reg_1256;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699))) begin
        i_0_i_phi_fu_1194_p4 = i_0_i_cast8_mid2_v_reg_1708;
    end else begin
        i_0_i_phi_fu_1194_p4 = i_0_i_reg_1190;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        out_address0 = tmp_36_cast_fu_1671_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        out_address0 = grp_mmult_hw_float_32_s_fu_1278_out_r_address0;
    end else begin
        out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0))) begin
        out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        out_ce0 = grp_mmult_hw_float_32_s_fu_1278_out_r_ce0;
    end else begin
        out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_we0 = grp_mmult_hw_float_32_s_fu_1278_out_r_we0;
    end else begin
        out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_1351_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == exitcond_flatten_reg_1699) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(1'b0 == exitcond_flatten_fu_1351_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond_flatten1_fu_1472_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond_flatten1_reg_1723) & (INPUT_STREAM_data_V_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond_flatten1_fu_1472_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (~(1'b0 == grp_mmult_hw_float_32_s_fu_1278_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp2_iter2) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp2_iter1)) & ~(~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond_flatten2_fu_1593_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp2_iter2) & ~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp2_iter1)) | (~(((1'b1 == ap_enable_reg_pp2_iter1) & (1'b0 == exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in)) | ((1'b1 == ap_enable_reg_pp2_iter2) & (1'b0 == ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) & (1'b0 == OUTPUT_STREAM_data_V_1_ack_in))) & (1'b1 == ap_enable_reg_pp2_iter0) & ~(1'b0 == exitcond_flatten2_fu_1593_p2) & ~(1'b1 == ap_enable_reg_pp2_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (~(ap_condition_2362 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign INPUT_STREAM_TREADY = INPUT_STREAM_dest_V_0_state[1'b1];

assign INPUT_STREAM_data_V_0_ack_in = INPUT_STREAM_data_V_0_state[1'b1];

assign INPUT_STREAM_data_V_0_load_A = (INPUT_STREAM_data_V_0_state_cmp_full & ~INPUT_STREAM_data_V_0_sel_wr);

assign INPUT_STREAM_data_V_0_load_B = (INPUT_STREAM_data_V_0_sel_wr & INPUT_STREAM_data_V_0_state_cmp_full);

assign INPUT_STREAM_data_V_0_sel = INPUT_STREAM_data_V_0_sel_rd;

assign INPUT_STREAM_data_V_0_state_cmp_full = ((INPUT_STREAM_data_V_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign INPUT_STREAM_data_V_0_vld_in = INPUT_STREAM_TVALID;

assign INPUT_STREAM_data_V_0_vld_out = INPUT_STREAM_data_V_0_state[1'b0];

assign INPUT_STREAM_dest_V_0_vld_in = INPUT_STREAM_TVALID;

assign OUTPUT_STREAM_TDATA = OUTPUT_STREAM_data_V_1_data_out;

assign OUTPUT_STREAM_TDEST = OUTPUT_STREAM_dest_V_1_data_out;

assign OUTPUT_STREAM_TID = OUTPUT_STREAM_id_V_1_data_out;

assign OUTPUT_STREAM_TKEEP = OUTPUT_STREAM_keep_V_1_data_out;

assign OUTPUT_STREAM_TLAST = OUTPUT_STREAM_last_V_1_data_out;

assign OUTPUT_STREAM_TSTRB = OUTPUT_STREAM_strb_V_1_data_out;

assign OUTPUT_STREAM_TUSER = OUTPUT_STREAM_user_V_1_data_out;

assign OUTPUT_STREAM_TVALID = OUTPUT_STREAM_dest_V_1_state[1'b0];

assign OUTPUT_STREAM_data_V_1_ack_in = OUTPUT_STREAM_data_V_1_state[1'b1];

assign OUTPUT_STREAM_data_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_data_V_1_load_A = (OUTPUT_STREAM_data_V_1_state_cmp_full & ~OUTPUT_STREAM_data_V_1_sel_wr);

assign OUTPUT_STREAM_data_V_1_load_B = (OUTPUT_STREAM_data_V_1_sel_wr & OUTPUT_STREAM_data_V_1_state_cmp_full);

assign OUTPUT_STREAM_data_V_1_sel = OUTPUT_STREAM_data_V_1_sel_rd;

assign OUTPUT_STREAM_data_V_1_state_cmp_full = ((OUTPUT_STREAM_data_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign OUTPUT_STREAM_data_V_1_vld_out = OUTPUT_STREAM_data_V_1_state[1'b0];

assign OUTPUT_STREAM_dest_V_1_ack_in = OUTPUT_STREAM_dest_V_1_state[1'b1];

assign OUTPUT_STREAM_dest_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_dest_V_1_data_out = ap_const_lv5_0;

assign OUTPUT_STREAM_dest_V_1_sel = OUTPUT_STREAM_dest_V_1_sel_rd;

assign OUTPUT_STREAM_dest_V_1_vld_out = OUTPUT_STREAM_dest_V_1_state[1'b0];

assign OUTPUT_STREAM_id_V_1_ack_in = OUTPUT_STREAM_id_V_1_state[1'b1];

assign OUTPUT_STREAM_id_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_id_V_1_data_out = ap_const_lv5_0;

assign OUTPUT_STREAM_id_V_1_sel = OUTPUT_STREAM_id_V_1_sel_rd;

assign OUTPUT_STREAM_id_V_1_vld_out = OUTPUT_STREAM_id_V_1_state[1'b0];

assign OUTPUT_STREAM_keep_V_1_ack_in = OUTPUT_STREAM_keep_V_1_state[1'b1];

assign OUTPUT_STREAM_keep_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_keep_V_1_data_out = ap_const_lv4_F;

assign OUTPUT_STREAM_keep_V_1_sel = OUTPUT_STREAM_keep_V_1_sel_rd;

assign OUTPUT_STREAM_keep_V_1_vld_out = OUTPUT_STREAM_keep_V_1_state[1'b0];

assign OUTPUT_STREAM_last_V_1_ack_in = OUTPUT_STREAM_last_V_1_state[1'b1];

assign OUTPUT_STREAM_last_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_last_V_1_load_A = (OUTPUT_STREAM_last_V_1_state_cmp_full & ~OUTPUT_STREAM_last_V_1_sel_wr);

assign OUTPUT_STREAM_last_V_1_load_B = (OUTPUT_STREAM_last_V_1_sel_wr & OUTPUT_STREAM_last_V_1_state_cmp_full);

assign OUTPUT_STREAM_last_V_1_sel = OUTPUT_STREAM_last_V_1_sel_rd;

assign OUTPUT_STREAM_last_V_1_state_cmp_full = ((OUTPUT_STREAM_last_V_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign OUTPUT_STREAM_last_V_1_vld_out = OUTPUT_STREAM_last_V_1_state[1'b0];

assign OUTPUT_STREAM_strb_V_1_ack_in = OUTPUT_STREAM_strb_V_1_state[1'b1];

assign OUTPUT_STREAM_strb_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_strb_V_1_data_out = ap_const_lv4_F;

assign OUTPUT_STREAM_strb_V_1_sel = OUTPUT_STREAM_strb_V_1_sel_rd;

assign OUTPUT_STREAM_strb_V_1_vld_out = OUTPUT_STREAM_strb_V_1_state[1'b0];

assign OUTPUT_STREAM_user_V_1_ack_in = OUTPUT_STREAM_user_V_1_state[1'b1];

assign OUTPUT_STREAM_user_V_1_ack_out = OUTPUT_STREAM_TREADY;

assign OUTPUT_STREAM_user_V_1_data_out = ap_const_lv4_0;

assign OUTPUT_STREAM_user_V_1_sel = OUTPUT_STREAM_user_V_1_sel_rd;

assign OUTPUT_STREAM_user_V_1_vld_out = OUTPUT_STREAM_user_V_1_state[1'b0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_5];

always @ (*) begin
    ap_condition_2362 = ((OUTPUT_STREAM_data_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_keep_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_strb_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_user_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_last_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_id_V_1_ack_in == 1'b0) | (OUTPUT_STREAM_dest_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond2_i_fu_1490_p2 = ((j2_0_i_reg_1234 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_1369_p2 = ((j_0_i_reg_1201 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_1472_p2 = ((indvar_flatten1_reg_1212 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_1593_p2 = ((indvar_flatten2_reg_1245 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1351_p2 = ((indvar_flatten_reg_1179 == ap_const_lv11_400) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1611_p2 = ((j5_0_i_reg_1267 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign grp_mmult_hw_float_32_s_fu_1278_ap_start = ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start;

assign i1_0_i_t_mid2_v_fu_1504_p3 = ((exitcond2_i_fu_1490_p2[0:0] === 1'b1) ? i_1_fu_1484_p2 : i1_0_i_phi_fu_1227_p4);

assign i4_0_i_cast4_mid2_v_fu_1625_p3 = ((exitcond_i_fu_1611_p2[0:0] === 1'b1) ? i_2_fu_1605_p2 : i4_0_i_phi_fu_1260_p4);

assign i_0_i_cast8_mid2_fu_1401_p1 = i_0_i_cast8_mid2_v_reg_1708;

assign i_0_i_cast8_mid2_v_fu_1383_p3 = ((exitcond4_i_fu_1369_p2[0:0] === 1'b1) ? i_fu_1363_p2 : i_0_i_phi_fu_1194_p4);

assign i_1_fu_1484_p2 = (ap_const_lv6_1 + i1_0_i_phi_fu_1227_p4);

assign i_2_fu_1605_p2 = (ap_const_lv6_1 + i4_0_i_phi_fu_1260_p4);

assign i_fu_1363_p2 = (ap_const_lv6_1 + i_0_i_phi_fu_1194_p4);

assign indvar_flatten_next1_fu_1599_p2 = (indvar_flatten2_reg_1245 + ap_const_lv11_1);

assign indvar_flatten_next2_fu_1478_p2 = (indvar_flatten1_reg_1212 + ap_const_lv11_1);

assign indvar_flatten_next_fu_1357_p2 = (indvar_flatten_reg_1179 + ap_const_lv11_1);

assign j2_0_i_cast5_fu_1522_p1 = j2_0_i_mid2_reg_1732;

assign j2_0_i_mid2_fu_1496_p3 = ((exitcond2_i_fu_1490_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j2_0_i_reg_1234);

assign j5_0_i_cast1_cast_fu_1661_p1 = j5_0_i_mid2_fu_1617_p3;

assign j5_0_i_cast2_fu_1657_p1 = j5_0_i_mid2_fu_1617_p3;

assign j5_0_i_mid2_fu_1617_p3 = ((exitcond_i_fu_1611_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j5_0_i_reg_1267);

assign j_0_i_mid2_fu_1375_p3 = ((exitcond4_i_fu_1369_p2[0:0] === 1'b1) ? ap_const_lv6_0 : j_0_i_reg_1201);

assign j_1_fu_1516_p2 = (j2_0_i_mid2_fu_1496_p3 + ap_const_lv6_1);

assign j_2_fu_1688_p2 = (ap_const_lv6_1 + j5_0_i_mid2_fu_1617_p3);

assign j_fu_1395_p2 = (j_0_i_mid2_fu_1375_p3 + ap_const_lv6_1);

assign k_fu_1676_p2 = (tmp_7_mid2_fu_1649_p3 + j5_0_i_cast2_fu_1657_p1);

assign last_assign_fu_1682_p2 = ((k_fu_1676_p2 == ap_const_lv10_3FF) ? 1'b1 : 1'b0);

assign ret_1_fu_1557_p1 = INPUT_STREAM_data_V_0_data_out;

assign ret_fu_1436_p1 = INPUT_STREAM_data_V_0_data_out;

assign tmp_1_fu_1391_p1 = j_0_i_mid2_fu_1375_p3[4:0];

assign tmp_2_fu_1512_p1 = i1_0_i_t_mid2_v_fu_1504_p3[4:0];

assign tmp_34_cast_fu_1641_p1 = tmp_fu_1633_p3;

assign tmp_34_fu_1665_p2 = (tmp_34_cast_fu_1641_p1 + j5_0_i_cast1_cast_fu_1661_p1);

assign tmp_36_cast_fu_1671_p1 = tmp_34_fu_1665_p2;

assign tmp_3_fu_1645_p1 = i4_0_i_cast4_mid2_v_fu_1625_p3[4:0];

assign tmp_7_mid2_fu_1649_p3 = {{tmp_3_fu_1645_p1}, {ap_const_lv5_0}};

assign tmp_fu_1633_p3 = {{i4_0_i_cast4_mid2_v_fu_1625_p3}, {ap_const_lv5_0}};

assign val_assign_fu_1694_p1 = out_q0;

endmodule //HLS_accel
