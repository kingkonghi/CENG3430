-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HLS_accel is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (3 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUTPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUTPUT_STREAM_TREADY : IN STD_LOGIC;
    OUTPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (3 downto 0);
    OUTPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUTPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    OUTPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of HLS_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "HLS_accel,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=4270,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=160,HLS_SYN_FF=13720,HLS_SYN_LUT=23786}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_data_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_vld_out : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_ack_in : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal INPUT_STREAM_data_V_0_sel_rd : STD_LOGIC := '0';
    signal INPUT_STREAM_data_V_0_sel_wr : STD_LOGIC := '0';
    signal INPUT_STREAM_data_V_0_sel : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_load_A : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_load_B : STD_LOGIC;
    signal INPUT_STREAM_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_data_V_0_state_cmp_full : STD_LOGIC;
    signal INPUT_STREAM_dest_V_0_vld_in : STD_LOGIC;
    signal INPUT_STREAM_dest_V_0_ack_out : STD_LOGIC;
    signal INPUT_STREAM_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_data_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal OUTPUT_STREAM_data_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_data_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_data_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_data_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_keep_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_keep_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_strb_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_strb_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_strb_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_strb_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_strb_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_user_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal OUTPUT_STREAM_user_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_user_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_user_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_user_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_user_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_user_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_last_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_last_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_last_V_1_sel_wr : STD_LOGIC := '0';
    signal OUTPUT_STREAM_last_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_load_A : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_load_B : STD_LOGIC;
    signal OUTPUT_STREAM_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_last_V_1_state_cmp_full : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal OUTPUT_STREAM_id_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_id_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal OUTPUT_STREAM_dest_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal OUTPUT_STREAM_dest_V_1_vld_in : STD_LOGIC;
    signal OUTPUT_STREAM_dest_V_1_vld_out : STD_LOGIC;
    signal OUTPUT_STREAM_dest_V_1_ack_in : STD_LOGIC;
    signal OUTPUT_STREAM_dest_V_1_ack_out : STD_LOGIC;
    signal OUTPUT_STREAM_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal OUTPUT_STREAM_dest_V_1_sel : STD_LOGIC;
    signal OUTPUT_STREAM_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal INPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1699 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1723 : STD_LOGIC_VECTOR (0 downto 0);
    signal OUTPUT_STREAM_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten2_reg_1751 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_1179 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_0_i_reg_1190 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_i_reg_1201 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten1_reg_1212 : STD_LOGIC_VECTOR (10 downto 0);
    signal i1_0_i_reg_1223 : STD_LOGIC_VECTOR (5 downto 0);
    signal j2_0_i_reg_1234 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten2_reg_1245 : STD_LOGIC_VECTOR (10 downto 0);
    signal i4_0_i_reg_1256 : STD_LOGIC_VECTOR (5 downto 0);
    signal j5_0_i_reg_1267 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1357_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal i_0_i_cast8_mid2_v_fu_1383_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_0_i_cast8_mid2_v_reg_1708 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_1391_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_reg_1714 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_fu_1395_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten1_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next2_fu_1478_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal j2_0_i_mid2_fu_1496_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j2_0_i_mid2_reg_1732 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_0_i_t_mid2_v_fu_1504_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_0_i_t_mid2_v_reg_1737 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_1512_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_reg_1742 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_fu_1516_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_flatten2_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next1_fu_1599_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal i4_0_i_cast4_mid2_v_fu_1625_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal i4_0_i_cast4_mid2_v_reg_1760 : STD_LOGIC_VECTOR (5 downto 0);
    signal last_assign_fu_1682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_assign_reg_1770 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_1688_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal val_assign_fu_1694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_mmult_hw_float_32_s_fu_1278_ap_done : STD_LOGIC;
    signal a_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_0_ce0 : STD_LOGIC;
    signal a_0_we0 : STD_LOGIC;
    signal a_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_1_ce0 : STD_LOGIC;
    signal a_1_we0 : STD_LOGIC;
    signal a_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_2_ce0 : STD_LOGIC;
    signal a_2_we0 : STD_LOGIC;
    signal a_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_3_ce0 : STD_LOGIC;
    signal a_3_we0 : STD_LOGIC;
    signal a_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_4_ce0 : STD_LOGIC;
    signal a_4_we0 : STD_LOGIC;
    signal a_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_5_ce0 : STD_LOGIC;
    signal a_5_we0 : STD_LOGIC;
    signal a_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_6_ce0 : STD_LOGIC;
    signal a_6_we0 : STD_LOGIC;
    signal a_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_7_ce0 : STD_LOGIC;
    signal a_7_we0 : STD_LOGIC;
    signal a_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_8_ce0 : STD_LOGIC;
    signal a_8_we0 : STD_LOGIC;
    signal a_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_9_ce0 : STD_LOGIC;
    signal a_9_we0 : STD_LOGIC;
    signal a_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_10_ce0 : STD_LOGIC;
    signal a_10_we0 : STD_LOGIC;
    signal a_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_11_ce0 : STD_LOGIC;
    signal a_11_we0 : STD_LOGIC;
    signal a_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_12_ce0 : STD_LOGIC;
    signal a_12_we0 : STD_LOGIC;
    signal a_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_13_ce0 : STD_LOGIC;
    signal a_13_we0 : STD_LOGIC;
    signal a_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_14_ce0 : STD_LOGIC;
    signal a_14_we0 : STD_LOGIC;
    signal a_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_15_ce0 : STD_LOGIC;
    signal a_15_we0 : STD_LOGIC;
    signal a_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_16_ce0 : STD_LOGIC;
    signal a_16_we0 : STD_LOGIC;
    signal a_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_17_ce0 : STD_LOGIC;
    signal a_17_we0 : STD_LOGIC;
    signal a_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_18_ce0 : STD_LOGIC;
    signal a_18_we0 : STD_LOGIC;
    signal a_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_19_ce0 : STD_LOGIC;
    signal a_19_we0 : STD_LOGIC;
    signal a_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_20_ce0 : STD_LOGIC;
    signal a_20_we0 : STD_LOGIC;
    signal a_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_21_ce0 : STD_LOGIC;
    signal a_21_we0 : STD_LOGIC;
    signal a_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_22_ce0 : STD_LOGIC;
    signal a_22_we0 : STD_LOGIC;
    signal a_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_23_ce0 : STD_LOGIC;
    signal a_23_we0 : STD_LOGIC;
    signal a_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_24_ce0 : STD_LOGIC;
    signal a_24_we0 : STD_LOGIC;
    signal a_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_25_ce0 : STD_LOGIC;
    signal a_25_we0 : STD_LOGIC;
    signal a_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_26_ce0 : STD_LOGIC;
    signal a_26_we0 : STD_LOGIC;
    signal a_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_27_ce0 : STD_LOGIC;
    signal a_27_we0 : STD_LOGIC;
    signal a_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_28_ce0 : STD_LOGIC;
    signal a_28_we0 : STD_LOGIC;
    signal a_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_29_ce0 : STD_LOGIC;
    signal a_29_we0 : STD_LOGIC;
    signal a_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_30_ce0 : STD_LOGIC;
    signal a_30_we0 : STD_LOGIC;
    signal a_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_31_ce0 : STD_LOGIC;
    signal a_31_we0 : STD_LOGIC;
    signal a_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_0_ce0 : STD_LOGIC;
    signal b_0_we0 : STD_LOGIC;
    signal b_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_1_ce0 : STD_LOGIC;
    signal b_1_we0 : STD_LOGIC;
    signal b_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_2_ce0 : STD_LOGIC;
    signal b_2_we0 : STD_LOGIC;
    signal b_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_3_ce0 : STD_LOGIC;
    signal b_3_we0 : STD_LOGIC;
    signal b_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_4_ce0 : STD_LOGIC;
    signal b_4_we0 : STD_LOGIC;
    signal b_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_5_ce0 : STD_LOGIC;
    signal b_5_we0 : STD_LOGIC;
    signal b_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_6_ce0 : STD_LOGIC;
    signal b_6_we0 : STD_LOGIC;
    signal b_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_7_ce0 : STD_LOGIC;
    signal b_7_we0 : STD_LOGIC;
    signal b_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_8_ce0 : STD_LOGIC;
    signal b_8_we0 : STD_LOGIC;
    signal b_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_9_ce0 : STD_LOGIC;
    signal b_9_we0 : STD_LOGIC;
    signal b_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_10_ce0 : STD_LOGIC;
    signal b_10_we0 : STD_LOGIC;
    signal b_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_11_ce0 : STD_LOGIC;
    signal b_11_we0 : STD_LOGIC;
    signal b_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_12_ce0 : STD_LOGIC;
    signal b_12_we0 : STD_LOGIC;
    signal b_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_13_ce0 : STD_LOGIC;
    signal b_13_we0 : STD_LOGIC;
    signal b_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_14_ce0 : STD_LOGIC;
    signal b_14_we0 : STD_LOGIC;
    signal b_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_15_ce0 : STD_LOGIC;
    signal b_15_we0 : STD_LOGIC;
    signal b_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_16_ce0 : STD_LOGIC;
    signal b_16_we0 : STD_LOGIC;
    signal b_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_17_ce0 : STD_LOGIC;
    signal b_17_we0 : STD_LOGIC;
    signal b_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_18_ce0 : STD_LOGIC;
    signal b_18_we0 : STD_LOGIC;
    signal b_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_19_ce0 : STD_LOGIC;
    signal b_19_we0 : STD_LOGIC;
    signal b_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_20_ce0 : STD_LOGIC;
    signal b_20_we0 : STD_LOGIC;
    signal b_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_21_ce0 : STD_LOGIC;
    signal b_21_we0 : STD_LOGIC;
    signal b_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_22_ce0 : STD_LOGIC;
    signal b_22_we0 : STD_LOGIC;
    signal b_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_23_ce0 : STD_LOGIC;
    signal b_23_we0 : STD_LOGIC;
    signal b_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_24_ce0 : STD_LOGIC;
    signal b_24_we0 : STD_LOGIC;
    signal b_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_25_ce0 : STD_LOGIC;
    signal b_25_we0 : STD_LOGIC;
    signal b_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_26_ce0 : STD_LOGIC;
    signal b_26_we0 : STD_LOGIC;
    signal b_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_27_ce0 : STD_LOGIC;
    signal b_27_we0 : STD_LOGIC;
    signal b_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_28_ce0 : STD_LOGIC;
    signal b_28_we0 : STD_LOGIC;
    signal b_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_29_ce0 : STD_LOGIC;
    signal b_29_we0 : STD_LOGIC;
    signal b_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_30_ce0 : STD_LOGIC;
    signal b_30_we0 : STD_LOGIC;
    signal b_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_31_ce0 : STD_LOGIC;
    signal b_31_we0 : STD_LOGIC;
    signal b_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_ce0 : STD_LOGIC;
    signal out_we0 : STD_LOGIC;
    signal out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_ap_start : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_ap_idle : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_ap_ready : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_0_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_1_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_2_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_3_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_4_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_5_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_6_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_7_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_8_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_9_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_10_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_11_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_12_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_13_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_14_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_15_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_16_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_17_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_18_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_19_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_20_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_21_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_22_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_23_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_24_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_25_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_26_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_27_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_28_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_29_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_30_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_a_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_a_31_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_0_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_1_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_2_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_3_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_4_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_5_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_6_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_7_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_8_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_9_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_9_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_10_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_10_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_11_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_11_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_12_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_12_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_13_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_13_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_14_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_14_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_15_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_16_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_16_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_17_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_17_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_18_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_18_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_19_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_19_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_20_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_20_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_21_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_21_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_22_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_22_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_23_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_23_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_24_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_24_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_25_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_25_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_26_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_26_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_27_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_27_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_28_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_28_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_29_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_30_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_30_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_b_31_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_b_31_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_out_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mmult_hw_float_32_s_fu_1278_out_r_ce0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_out_r_we0 : STD_LOGIC;
    signal grp_mmult_hw_float_32_s_fu_1278_out_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_phi_fu_1194_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_0_i_phi_fu_1227_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal i4_0_i_phi_fu_1260_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_0_i_cast8_mid2_fu_1401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_0_i_cast5_fu_1522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_cast_fu_1671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_fu_1436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_1_fu_1557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_i_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1363_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_i_mid2_fu_1375_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond2_i_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1484_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond_i_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_1605_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1633_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_1645_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal j5_0_i_mid2_fu_1617_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_cast_fu_1641_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal j5_0_i_cast1_cast_fu_1661_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_fu_1665_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_mid2_fu_1649_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal j5_0_i_cast2_fu_1657_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_fu_1676_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_condition_2362 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component mmult_hw_float_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_0_ce0 : OUT STD_LOGIC;
        a_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_1_ce0 : OUT STD_LOGIC;
        a_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_2_ce0 : OUT STD_LOGIC;
        a_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_3_ce0 : OUT STD_LOGIC;
        a_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_4_ce0 : OUT STD_LOGIC;
        a_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_5_ce0 : OUT STD_LOGIC;
        a_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_6_ce0 : OUT STD_LOGIC;
        a_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_7_ce0 : OUT STD_LOGIC;
        a_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_8_ce0 : OUT STD_LOGIC;
        a_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_9_ce0 : OUT STD_LOGIC;
        a_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_10_ce0 : OUT STD_LOGIC;
        a_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_11_ce0 : OUT STD_LOGIC;
        a_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_12_ce0 : OUT STD_LOGIC;
        a_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_13_ce0 : OUT STD_LOGIC;
        a_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_14_ce0 : OUT STD_LOGIC;
        a_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_15_ce0 : OUT STD_LOGIC;
        a_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_16_ce0 : OUT STD_LOGIC;
        a_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_17_ce0 : OUT STD_LOGIC;
        a_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_18_ce0 : OUT STD_LOGIC;
        a_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_19_ce0 : OUT STD_LOGIC;
        a_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_20_ce0 : OUT STD_LOGIC;
        a_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_21_ce0 : OUT STD_LOGIC;
        a_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_22_ce0 : OUT STD_LOGIC;
        a_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_23_ce0 : OUT STD_LOGIC;
        a_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_24_ce0 : OUT STD_LOGIC;
        a_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_25_ce0 : OUT STD_LOGIC;
        a_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_26_ce0 : OUT STD_LOGIC;
        a_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_27_ce0 : OUT STD_LOGIC;
        a_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_28_ce0 : OUT STD_LOGIC;
        a_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_29_ce0 : OUT STD_LOGIC;
        a_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_30_ce0 : OUT STD_LOGIC;
        a_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        a_31_ce0 : OUT STD_LOGIC;
        a_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_0_ce0 : OUT STD_LOGIC;
        b_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_1_ce0 : OUT STD_LOGIC;
        b_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_2_ce0 : OUT STD_LOGIC;
        b_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_3_ce0 : OUT STD_LOGIC;
        b_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_4_ce0 : OUT STD_LOGIC;
        b_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_5_ce0 : OUT STD_LOGIC;
        b_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_6_ce0 : OUT STD_LOGIC;
        b_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_7_ce0 : OUT STD_LOGIC;
        b_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_8_ce0 : OUT STD_LOGIC;
        b_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_9_ce0 : OUT STD_LOGIC;
        b_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_10_ce0 : OUT STD_LOGIC;
        b_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_11_ce0 : OUT STD_LOGIC;
        b_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_12_ce0 : OUT STD_LOGIC;
        b_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_13_ce0 : OUT STD_LOGIC;
        b_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_14_ce0 : OUT STD_LOGIC;
        b_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_15_ce0 : OUT STD_LOGIC;
        b_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_16_ce0 : OUT STD_LOGIC;
        b_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_17_ce0 : OUT STD_LOGIC;
        b_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_18_ce0 : OUT STD_LOGIC;
        b_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_19_ce0 : OUT STD_LOGIC;
        b_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_20_ce0 : OUT STD_LOGIC;
        b_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_21_ce0 : OUT STD_LOGIC;
        b_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_22_ce0 : OUT STD_LOGIC;
        b_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_23_ce0 : OUT STD_LOGIC;
        b_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_24_ce0 : OUT STD_LOGIC;
        b_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_25_ce0 : OUT STD_LOGIC;
        b_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_26_ce0 : OUT STD_LOGIC;
        b_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_27_ce0 : OUT STD_LOGIC;
        b_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_28_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_28_ce0 : OUT STD_LOGIC;
        b_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_29_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_29_ce0 : OUT STD_LOGIC;
        b_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_30_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_30_ce0 : OUT STD_LOGIC;
        b_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_31_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        b_31_ce0 : OUT STD_LOGIC;
        b_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_accel_a_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_accel_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HLS_accel_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    HLS_accel_CONTROL_BUS_s_axi_U : component HLS_accel_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    a_0_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_0_address0,
        ce0 => a_0_ce0,
        we0 => a_0_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_0_q0);

    a_1_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_1_address0,
        ce0 => a_1_ce0,
        we0 => a_1_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_1_q0);

    a_2_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_2_address0,
        ce0 => a_2_ce0,
        we0 => a_2_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_2_q0);

    a_3_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_3_address0,
        ce0 => a_3_ce0,
        we0 => a_3_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_3_q0);

    a_4_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_4_address0,
        ce0 => a_4_ce0,
        we0 => a_4_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_4_q0);

    a_5_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_5_address0,
        ce0 => a_5_ce0,
        we0 => a_5_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_5_q0);

    a_6_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_6_address0,
        ce0 => a_6_ce0,
        we0 => a_6_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_6_q0);

    a_7_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_7_address0,
        ce0 => a_7_ce0,
        we0 => a_7_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_7_q0);

    a_8_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_8_address0,
        ce0 => a_8_ce0,
        we0 => a_8_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_8_q0);

    a_9_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_9_address0,
        ce0 => a_9_ce0,
        we0 => a_9_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_9_q0);

    a_10_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_10_address0,
        ce0 => a_10_ce0,
        we0 => a_10_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_10_q0);

    a_11_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_11_address0,
        ce0 => a_11_ce0,
        we0 => a_11_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_11_q0);

    a_12_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_12_address0,
        ce0 => a_12_ce0,
        we0 => a_12_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_12_q0);

    a_13_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_13_address0,
        ce0 => a_13_ce0,
        we0 => a_13_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_13_q0);

    a_14_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_14_address0,
        ce0 => a_14_ce0,
        we0 => a_14_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_14_q0);

    a_15_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_15_address0,
        ce0 => a_15_ce0,
        we0 => a_15_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_15_q0);

    a_16_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_16_address0,
        ce0 => a_16_ce0,
        we0 => a_16_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_16_q0);

    a_17_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_17_address0,
        ce0 => a_17_ce0,
        we0 => a_17_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_17_q0);

    a_18_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_18_address0,
        ce0 => a_18_ce0,
        we0 => a_18_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_18_q0);

    a_19_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_19_address0,
        ce0 => a_19_ce0,
        we0 => a_19_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_19_q0);

    a_20_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_20_address0,
        ce0 => a_20_ce0,
        we0 => a_20_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_20_q0);

    a_21_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_21_address0,
        ce0 => a_21_ce0,
        we0 => a_21_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_21_q0);

    a_22_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_22_address0,
        ce0 => a_22_ce0,
        we0 => a_22_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_22_q0);

    a_23_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_23_address0,
        ce0 => a_23_ce0,
        we0 => a_23_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_23_q0);

    a_24_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_24_address0,
        ce0 => a_24_ce0,
        we0 => a_24_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_24_q0);

    a_25_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_25_address0,
        ce0 => a_25_ce0,
        we0 => a_25_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_25_q0);

    a_26_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_26_address0,
        ce0 => a_26_ce0,
        we0 => a_26_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_26_q0);

    a_27_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_27_address0,
        ce0 => a_27_ce0,
        we0 => a_27_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_27_q0);

    a_28_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_28_address0,
        ce0 => a_28_ce0,
        we0 => a_28_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_28_q0);

    a_29_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_29_address0,
        ce0 => a_29_ce0,
        we0 => a_29_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_29_q0);

    a_30_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_30_address0,
        ce0 => a_30_ce0,
        we0 => a_30_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_30_q0);

    a_31_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => a_31_address0,
        ce0 => a_31_ce0,
        we0 => a_31_we0,
        d0 => ret_fu_1436_p1,
        q0 => a_31_q0);

    b_0_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_0_address0,
        ce0 => b_0_ce0,
        we0 => b_0_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_0_q0);

    b_1_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_1_address0,
        ce0 => b_1_ce0,
        we0 => b_1_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_1_q0);

    b_2_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_2_address0,
        ce0 => b_2_ce0,
        we0 => b_2_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_2_q0);

    b_3_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_3_address0,
        ce0 => b_3_ce0,
        we0 => b_3_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_3_q0);

    b_4_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_4_address0,
        ce0 => b_4_ce0,
        we0 => b_4_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_4_q0);

    b_5_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_5_address0,
        ce0 => b_5_ce0,
        we0 => b_5_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_5_q0);

    b_6_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_6_address0,
        ce0 => b_6_ce0,
        we0 => b_6_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_6_q0);

    b_7_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_7_address0,
        ce0 => b_7_ce0,
        we0 => b_7_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_7_q0);

    b_8_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_8_address0,
        ce0 => b_8_ce0,
        we0 => b_8_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_8_q0);

    b_9_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_9_address0,
        ce0 => b_9_ce0,
        we0 => b_9_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_9_q0);

    b_10_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_10_address0,
        ce0 => b_10_ce0,
        we0 => b_10_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_10_q0);

    b_11_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_11_address0,
        ce0 => b_11_ce0,
        we0 => b_11_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_11_q0);

    b_12_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_12_address0,
        ce0 => b_12_ce0,
        we0 => b_12_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_12_q0);

    b_13_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_13_address0,
        ce0 => b_13_ce0,
        we0 => b_13_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_13_q0);

    b_14_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_14_address0,
        ce0 => b_14_ce0,
        we0 => b_14_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_14_q0);

    b_15_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_15_address0,
        ce0 => b_15_ce0,
        we0 => b_15_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_15_q0);

    b_16_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_16_address0,
        ce0 => b_16_ce0,
        we0 => b_16_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_16_q0);

    b_17_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_17_address0,
        ce0 => b_17_ce0,
        we0 => b_17_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_17_q0);

    b_18_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_18_address0,
        ce0 => b_18_ce0,
        we0 => b_18_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_18_q0);

    b_19_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_19_address0,
        ce0 => b_19_ce0,
        we0 => b_19_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_19_q0);

    b_20_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_20_address0,
        ce0 => b_20_ce0,
        we0 => b_20_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_20_q0);

    b_21_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_21_address0,
        ce0 => b_21_ce0,
        we0 => b_21_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_21_q0);

    b_22_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_22_address0,
        ce0 => b_22_ce0,
        we0 => b_22_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_22_q0);

    b_23_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_23_address0,
        ce0 => b_23_ce0,
        we0 => b_23_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_23_q0);

    b_24_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_24_address0,
        ce0 => b_24_ce0,
        we0 => b_24_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_24_q0);

    b_25_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_25_address0,
        ce0 => b_25_ce0,
        we0 => b_25_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_25_q0);

    b_26_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_26_address0,
        ce0 => b_26_ce0,
        we0 => b_26_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_26_q0);

    b_27_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_27_address0,
        ce0 => b_27_ce0,
        we0 => b_27_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_27_q0);

    b_28_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_28_address0,
        ce0 => b_28_ce0,
        we0 => b_28_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_28_q0);

    b_29_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_29_address0,
        ce0 => b_29_ce0,
        we0 => b_29_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_29_q0);

    b_30_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_30_address0,
        ce0 => b_30_ce0,
        we0 => b_30_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_30_q0);

    b_31_U : component HLS_accel_a_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => b_31_address0,
        ce0 => b_31_ce0,
        we0 => b_31_we0,
        d0 => ret_1_fu_1557_p1,
        q0 => b_31_q0);

    out_U : component HLS_accel_out
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_address0,
        ce0 => out_ce0,
        we0 => out_we0,
        d0 => grp_mmult_hw_float_32_s_fu_1278_out_r_d0,
        q0 => out_q0);

    grp_mmult_hw_float_32_s_fu_1278 : component mmult_hw_float_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mmult_hw_float_32_s_fu_1278_ap_start,
        ap_done => grp_mmult_hw_float_32_s_fu_1278_ap_done,
        ap_idle => grp_mmult_hw_float_32_s_fu_1278_ap_idle,
        ap_ready => grp_mmult_hw_float_32_s_fu_1278_ap_ready,
        a_0_address0 => grp_mmult_hw_float_32_s_fu_1278_a_0_address0,
        a_0_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_0_ce0,
        a_0_q0 => a_0_q0,
        a_1_address0 => grp_mmult_hw_float_32_s_fu_1278_a_1_address0,
        a_1_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_1_ce0,
        a_1_q0 => a_1_q0,
        a_2_address0 => grp_mmult_hw_float_32_s_fu_1278_a_2_address0,
        a_2_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_2_ce0,
        a_2_q0 => a_2_q0,
        a_3_address0 => grp_mmult_hw_float_32_s_fu_1278_a_3_address0,
        a_3_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_3_ce0,
        a_3_q0 => a_3_q0,
        a_4_address0 => grp_mmult_hw_float_32_s_fu_1278_a_4_address0,
        a_4_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_4_ce0,
        a_4_q0 => a_4_q0,
        a_5_address0 => grp_mmult_hw_float_32_s_fu_1278_a_5_address0,
        a_5_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_5_ce0,
        a_5_q0 => a_5_q0,
        a_6_address0 => grp_mmult_hw_float_32_s_fu_1278_a_6_address0,
        a_6_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_6_ce0,
        a_6_q0 => a_6_q0,
        a_7_address0 => grp_mmult_hw_float_32_s_fu_1278_a_7_address0,
        a_7_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_7_ce0,
        a_7_q0 => a_7_q0,
        a_8_address0 => grp_mmult_hw_float_32_s_fu_1278_a_8_address0,
        a_8_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_8_ce0,
        a_8_q0 => a_8_q0,
        a_9_address0 => grp_mmult_hw_float_32_s_fu_1278_a_9_address0,
        a_9_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_9_ce0,
        a_9_q0 => a_9_q0,
        a_10_address0 => grp_mmult_hw_float_32_s_fu_1278_a_10_address0,
        a_10_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_10_ce0,
        a_10_q0 => a_10_q0,
        a_11_address0 => grp_mmult_hw_float_32_s_fu_1278_a_11_address0,
        a_11_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_11_ce0,
        a_11_q0 => a_11_q0,
        a_12_address0 => grp_mmult_hw_float_32_s_fu_1278_a_12_address0,
        a_12_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_12_ce0,
        a_12_q0 => a_12_q0,
        a_13_address0 => grp_mmult_hw_float_32_s_fu_1278_a_13_address0,
        a_13_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_13_ce0,
        a_13_q0 => a_13_q0,
        a_14_address0 => grp_mmult_hw_float_32_s_fu_1278_a_14_address0,
        a_14_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_14_ce0,
        a_14_q0 => a_14_q0,
        a_15_address0 => grp_mmult_hw_float_32_s_fu_1278_a_15_address0,
        a_15_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_15_ce0,
        a_15_q0 => a_15_q0,
        a_16_address0 => grp_mmult_hw_float_32_s_fu_1278_a_16_address0,
        a_16_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_16_ce0,
        a_16_q0 => a_16_q0,
        a_17_address0 => grp_mmult_hw_float_32_s_fu_1278_a_17_address0,
        a_17_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_17_ce0,
        a_17_q0 => a_17_q0,
        a_18_address0 => grp_mmult_hw_float_32_s_fu_1278_a_18_address0,
        a_18_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_18_ce0,
        a_18_q0 => a_18_q0,
        a_19_address0 => grp_mmult_hw_float_32_s_fu_1278_a_19_address0,
        a_19_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_19_ce0,
        a_19_q0 => a_19_q0,
        a_20_address0 => grp_mmult_hw_float_32_s_fu_1278_a_20_address0,
        a_20_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_20_ce0,
        a_20_q0 => a_20_q0,
        a_21_address0 => grp_mmult_hw_float_32_s_fu_1278_a_21_address0,
        a_21_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_21_ce0,
        a_21_q0 => a_21_q0,
        a_22_address0 => grp_mmult_hw_float_32_s_fu_1278_a_22_address0,
        a_22_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_22_ce0,
        a_22_q0 => a_22_q0,
        a_23_address0 => grp_mmult_hw_float_32_s_fu_1278_a_23_address0,
        a_23_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_23_ce0,
        a_23_q0 => a_23_q0,
        a_24_address0 => grp_mmult_hw_float_32_s_fu_1278_a_24_address0,
        a_24_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_24_ce0,
        a_24_q0 => a_24_q0,
        a_25_address0 => grp_mmult_hw_float_32_s_fu_1278_a_25_address0,
        a_25_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_25_ce0,
        a_25_q0 => a_25_q0,
        a_26_address0 => grp_mmult_hw_float_32_s_fu_1278_a_26_address0,
        a_26_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_26_ce0,
        a_26_q0 => a_26_q0,
        a_27_address0 => grp_mmult_hw_float_32_s_fu_1278_a_27_address0,
        a_27_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_27_ce0,
        a_27_q0 => a_27_q0,
        a_28_address0 => grp_mmult_hw_float_32_s_fu_1278_a_28_address0,
        a_28_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_28_ce0,
        a_28_q0 => a_28_q0,
        a_29_address0 => grp_mmult_hw_float_32_s_fu_1278_a_29_address0,
        a_29_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_29_ce0,
        a_29_q0 => a_29_q0,
        a_30_address0 => grp_mmult_hw_float_32_s_fu_1278_a_30_address0,
        a_30_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_30_ce0,
        a_30_q0 => a_30_q0,
        a_31_address0 => grp_mmult_hw_float_32_s_fu_1278_a_31_address0,
        a_31_ce0 => grp_mmult_hw_float_32_s_fu_1278_a_31_ce0,
        a_31_q0 => a_31_q0,
        b_0_address0 => grp_mmult_hw_float_32_s_fu_1278_b_0_address0,
        b_0_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_0_ce0,
        b_0_q0 => b_0_q0,
        b_1_address0 => grp_mmult_hw_float_32_s_fu_1278_b_1_address0,
        b_1_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_1_ce0,
        b_1_q0 => b_1_q0,
        b_2_address0 => grp_mmult_hw_float_32_s_fu_1278_b_2_address0,
        b_2_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_2_ce0,
        b_2_q0 => b_2_q0,
        b_3_address0 => grp_mmult_hw_float_32_s_fu_1278_b_3_address0,
        b_3_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_3_ce0,
        b_3_q0 => b_3_q0,
        b_4_address0 => grp_mmult_hw_float_32_s_fu_1278_b_4_address0,
        b_4_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_4_ce0,
        b_4_q0 => b_4_q0,
        b_5_address0 => grp_mmult_hw_float_32_s_fu_1278_b_5_address0,
        b_5_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_5_ce0,
        b_5_q0 => b_5_q0,
        b_6_address0 => grp_mmult_hw_float_32_s_fu_1278_b_6_address0,
        b_6_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_6_ce0,
        b_6_q0 => b_6_q0,
        b_7_address0 => grp_mmult_hw_float_32_s_fu_1278_b_7_address0,
        b_7_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_7_ce0,
        b_7_q0 => b_7_q0,
        b_8_address0 => grp_mmult_hw_float_32_s_fu_1278_b_8_address0,
        b_8_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_8_ce0,
        b_8_q0 => b_8_q0,
        b_9_address0 => grp_mmult_hw_float_32_s_fu_1278_b_9_address0,
        b_9_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_9_ce0,
        b_9_q0 => b_9_q0,
        b_10_address0 => grp_mmult_hw_float_32_s_fu_1278_b_10_address0,
        b_10_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_10_ce0,
        b_10_q0 => b_10_q0,
        b_11_address0 => grp_mmult_hw_float_32_s_fu_1278_b_11_address0,
        b_11_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_11_ce0,
        b_11_q0 => b_11_q0,
        b_12_address0 => grp_mmult_hw_float_32_s_fu_1278_b_12_address0,
        b_12_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_12_ce0,
        b_12_q0 => b_12_q0,
        b_13_address0 => grp_mmult_hw_float_32_s_fu_1278_b_13_address0,
        b_13_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_13_ce0,
        b_13_q0 => b_13_q0,
        b_14_address0 => grp_mmult_hw_float_32_s_fu_1278_b_14_address0,
        b_14_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_14_ce0,
        b_14_q0 => b_14_q0,
        b_15_address0 => grp_mmult_hw_float_32_s_fu_1278_b_15_address0,
        b_15_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_15_ce0,
        b_15_q0 => b_15_q0,
        b_16_address0 => grp_mmult_hw_float_32_s_fu_1278_b_16_address0,
        b_16_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_16_ce0,
        b_16_q0 => b_16_q0,
        b_17_address0 => grp_mmult_hw_float_32_s_fu_1278_b_17_address0,
        b_17_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_17_ce0,
        b_17_q0 => b_17_q0,
        b_18_address0 => grp_mmult_hw_float_32_s_fu_1278_b_18_address0,
        b_18_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_18_ce0,
        b_18_q0 => b_18_q0,
        b_19_address0 => grp_mmult_hw_float_32_s_fu_1278_b_19_address0,
        b_19_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_19_ce0,
        b_19_q0 => b_19_q0,
        b_20_address0 => grp_mmult_hw_float_32_s_fu_1278_b_20_address0,
        b_20_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_20_ce0,
        b_20_q0 => b_20_q0,
        b_21_address0 => grp_mmult_hw_float_32_s_fu_1278_b_21_address0,
        b_21_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_21_ce0,
        b_21_q0 => b_21_q0,
        b_22_address0 => grp_mmult_hw_float_32_s_fu_1278_b_22_address0,
        b_22_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_22_ce0,
        b_22_q0 => b_22_q0,
        b_23_address0 => grp_mmult_hw_float_32_s_fu_1278_b_23_address0,
        b_23_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_23_ce0,
        b_23_q0 => b_23_q0,
        b_24_address0 => grp_mmult_hw_float_32_s_fu_1278_b_24_address0,
        b_24_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_24_ce0,
        b_24_q0 => b_24_q0,
        b_25_address0 => grp_mmult_hw_float_32_s_fu_1278_b_25_address0,
        b_25_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_25_ce0,
        b_25_q0 => b_25_q0,
        b_26_address0 => grp_mmult_hw_float_32_s_fu_1278_b_26_address0,
        b_26_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_26_ce0,
        b_26_q0 => b_26_q0,
        b_27_address0 => grp_mmult_hw_float_32_s_fu_1278_b_27_address0,
        b_27_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_27_ce0,
        b_27_q0 => b_27_q0,
        b_28_address0 => grp_mmult_hw_float_32_s_fu_1278_b_28_address0,
        b_28_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_28_ce0,
        b_28_q0 => b_28_q0,
        b_29_address0 => grp_mmult_hw_float_32_s_fu_1278_b_29_address0,
        b_29_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_29_ce0,
        b_29_q0 => b_29_q0,
        b_30_address0 => grp_mmult_hw_float_32_s_fu_1278_b_30_address0,
        b_30_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_30_ce0,
        b_30_q0 => b_30_q0,
        b_31_address0 => grp_mmult_hw_float_32_s_fu_1278_b_31_address0,
        b_31_ce0 => grp_mmult_hw_float_32_s_fu_1278_b_31_ce0,
        b_31_q0 => b_31_q0,
        out_r_address0 => grp_mmult_hw_float_32_s_fu_1278_out_r_address0,
        out_r_ce0 => grp_mmult_hw_float_32_s_fu_1278_out_r_ce0,
        out_r_we0 => grp_mmult_hw_float_32_s_fu_1278_out_r_we0,
        out_r_d0 => grp_mmult_hw_float_32_s_fu_1278_out_r_d0);





    INPUT_STREAM_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_data_V_0_ack_out) and (ap_const_logic_1 = INPUT_STREAM_data_V_0_vld_out))) then 
                                        INPUT_STREAM_data_V_0_sel_rd <= not(INPUT_STREAM_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = INPUT_STREAM_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_data_V_0_ack_in))) then 
                                        INPUT_STREAM_data_V_0_sel_wr <= not(INPUT_STREAM_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_data_V_0_ack_out) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = INPUT_STREAM_data_V_0_vld_in) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_2)))) then 
                    INPUT_STREAM_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_data_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_data_V_0_ack_out) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = INPUT_STREAM_data_V_0_ack_out) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_1)))) then 
                    INPUT_STREAM_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_data_V_0_vld_in) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = INPUT_STREAM_data_V_0_ack_out) and (INPUT_STREAM_data_V_0_state = ap_const_lv2_1)) or ((INPUT_STREAM_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = INPUT_STREAM_data_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_data_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_data_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_data_V_0_ack_out)))))) then 
                    INPUT_STREAM_data_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    INPUT_STREAM_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                INPUT_STREAM_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_dest_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_dest_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_dest_V_0_state)))) then 
                    INPUT_STREAM_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_dest_V_0_ack_out) and (ap_const_lv2_3 = INPUT_STREAM_dest_V_0_state)) or ((ap_const_logic_0 = INPUT_STREAM_dest_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_dest_V_0_state)))) then 
                    INPUT_STREAM_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_lv2_2 = INPUT_STREAM_dest_V_0_state)) or ((ap_const_logic_1 = INPUT_STREAM_dest_V_0_ack_out) and (ap_const_lv2_1 = INPUT_STREAM_dest_V_0_state)) or ((ap_const_lv2_3 = INPUT_STREAM_dest_V_0_state) and not(((ap_const_logic_1 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_logic_0 = INPUT_STREAM_dest_V_0_ack_out))) and not(((ap_const_logic_0 = INPUT_STREAM_dest_V_0_vld_in) and (ap_const_logic_1 = INPUT_STREAM_dest_V_0_ack_out)))))) then 
                    INPUT_STREAM_dest_V_0_state <= ap_const_lv2_3;
                else 
                    INPUT_STREAM_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_data_V_1_vld_out))) then 
                                        OUTPUT_STREAM_data_V_1_sel_rd <= not(OUTPUT_STREAM_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_data_V_1_ack_in))) then 
                                        OUTPUT_STREAM_data_V_1_sel_wr <= not(OUTPUT_STREAM_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_data_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_data_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_data_V_1_state)))) then 
                    OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_data_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_data_V_1_state)))) then 
                    OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_data_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_data_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_data_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_data_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_data_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_vld_out))) then 
                                        OUTPUT_STREAM_dest_V_1_sel_rd <= not(OUTPUT_STREAM_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_dest_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_dest_V_1_state)))) then 
                    OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_dest_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_dest_V_1_state)))) then 
                    OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_dest_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_dest_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_dest_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_dest_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_dest_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_id_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_id_V_1_vld_out))) then 
                                        OUTPUT_STREAM_id_V_1_sel_rd <= not(OUTPUT_STREAM_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_id_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_id_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_id_V_1_state)))) then 
                    OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_id_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_id_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_id_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_id_V_1_state)))) then 
                    OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_id_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_id_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_id_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_id_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_id_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_id_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_id_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_vld_out))) then 
                                        OUTPUT_STREAM_keep_V_1_sel_rd <= not(OUTPUT_STREAM_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_keep_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_keep_V_1_state)))) then 
                    OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_keep_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_keep_V_1_state)))) then 
                    OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_keep_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_keep_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_keep_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_keep_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_keep_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_last_V_1_vld_out))) then 
                                        OUTPUT_STREAM_last_V_1_sel_rd <= not(OUTPUT_STREAM_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_last_V_1_ack_in))) then 
                                        OUTPUT_STREAM_last_V_1_sel_wr <= not(OUTPUT_STREAM_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_last_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_last_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_last_V_1_state)))) then 
                    OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_last_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_last_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_last_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_last_V_1_state)))) then 
                    OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_last_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_last_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_last_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_last_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_last_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_last_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_vld_out))) then 
                                        OUTPUT_STREAM_strb_V_1_sel_rd <= not(OUTPUT_STREAM_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_strb_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_strb_V_1_state)))) then 
                    OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_strb_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_strb_V_1_state)))) then 
                    OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_strb_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_strb_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_strb_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_strb_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_strb_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = OUTPUT_STREAM_user_V_1_ack_out) and (ap_const_logic_1 = OUTPUT_STREAM_user_V_1_vld_out))) then 
                                        OUTPUT_STREAM_user_V_1_sel_rd <= not(OUTPUT_STREAM_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    OUTPUT_STREAM_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_user_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_user_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_user_V_1_state)))) then 
                    OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_user_V_1_ack_out) and (ap_const_lv2_3 = OUTPUT_STREAM_user_V_1_state)) or ((ap_const_logic_0 = OUTPUT_STREAM_user_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_user_V_1_state)))) then 
                    OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_lv2_2 = OUTPUT_STREAM_user_V_1_state)) or ((ap_const_logic_1 = OUTPUT_STREAM_user_V_1_ack_out) and (ap_const_lv2_1 = OUTPUT_STREAM_user_V_1_state)) or ((ap_const_lv2_3 = OUTPUT_STREAM_user_V_1_state) and not(((ap_const_logic_1 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_logic_0 = OUTPUT_STREAM_user_V_1_ack_out))) and not(((ap_const_logic_0 = OUTPUT_STREAM_user_V_1_vld_in) and (ap_const_logic_1 = OUTPUT_STREAM_user_V_1_ack_out)))))) then 
                    OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_3;
                else 
                    OUTPUT_STREAM_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond_flatten_fu_1351_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done)))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done))) or ((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done)))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_mmult_hw_float_32_s_fu_1278_ap_ready)) then 
                    ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_i_reg_1223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                i1_0_i_reg_1223 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
                i1_0_i_reg_1223 <= i1_0_i_t_mid2_v_reg_1737;
            end if; 
        end if;
    end process;

    i4_0_i_reg_1256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
                i4_0_i_reg_1256 <= i4_0_i_cast4_mid2_v_reg_1760;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done)))) then 
                i4_0_i_reg_1256 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_1190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
                i_0_i_reg_1190 <= i_0_i_cast8_mid2_v_reg_1708;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_0_i_reg_1190 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_1212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                indvar_flatten1_reg_1212 <= ap_const_lv11_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))) then 
                indvar_flatten1_reg_1212 <= indvar_flatten_next2_fu_1478_p2;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_1245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))) then 
                indvar_flatten2_reg_1245 <= indvar_flatten_next1_fu_1599_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done)))) then 
                indvar_flatten2_reg_1245 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))) then 
                indvar_flatten_reg_1179 <= indvar_flatten_next_fu_1357_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_1179 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j2_0_i_reg_1234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
                j2_0_i_reg_1234 <= ap_const_lv6_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))) then 
                j2_0_i_reg_1234 <= j_1_fu_1516_p2;
            end if; 
        end if;
    end process;

    j5_0_i_reg_1267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))) then 
                j5_0_i_reg_1267 <= j_2_fu_1688_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done)))) then 
                j5_0_i_reg_1267 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_0_i_reg_1201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))) then 
                j_0_i_reg_1201 <= j_fu_1395_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_0_i_reg_1201 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_data_V_0_load_A)) then
                INPUT_STREAM_data_V_0_payload_A <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = INPUT_STREAM_data_V_0_load_B)) then
                INPUT_STREAM_data_V_0_payload_B <= INPUT_STREAM_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_load_A)) then
                OUTPUT_STREAM_data_V_1_payload_A <= val_assign_fu_1694_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_load_B)) then
                OUTPUT_STREAM_data_V_1_payload_B <= val_assign_fu_1694_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_load_A)) then
                OUTPUT_STREAM_last_V_1_payload_A <= last_assign_reg_1770;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_load_B)) then
                OUTPUT_STREAM_last_V_1_payload_B <= last_assign_reg_1770;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then
                ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751 <= exitcond_flatten2_reg_1751;
                exitcond_flatten2_reg_1751 <= exitcond_flatten2_fu_1593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond_flatten1_reg_1723 <= exitcond_flatten1_fu_1472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then
                exitcond_flatten_reg_1699 <= exitcond_flatten_fu_1351_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))) then
                i1_0_i_t_mid2_v_reg_1737 <= i1_0_i_t_mid2_v_fu_1504_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))) then
                i4_0_i_cast4_mid2_v_reg_1760 <= i4_0_i_cast4_mid2_v_fu_1625_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))) then
                i_0_i_cast8_mid2_v_reg_1708 <= i_0_i_cast8_mid2_v_fu_1383_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))) then
                j2_0_i_mid2_reg_1732 <= j2_0_i_mid2_fu_1496_p3;
                tmp_2_reg_1742 <= tmp_2_fu_1512_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2))) then
                last_assign_reg_1770 <= last_assign_fu_1682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))) then
                tmp_1_reg_1714 <= tmp_1_fu_1391_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, INPUT_STREAM_data_V_0_vld_out, OUTPUT_STREAM_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751, exitcond_flatten_fu_1351_p2, ap_enable_reg_pp0_iter0, exitcond_flatten1_fu_1472_p2, ap_enable_reg_pp1_iter0, exitcond_flatten2_fu_1593_p2, ap_enable_reg_pp2_iter0, grp_mmult_hw_float_32_s_fu_1278_ap_done, ap_condition_2362)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1351_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_1351_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_1472_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (not((ap_const_logic_0 = grp_mmult_hw_float_32_s_fu_1278_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))) or (not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and not((ap_const_lv1_0 = exitcond_flatten2_fu_1593_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp2_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                if (not((ap_condition_2362 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    INPUT_STREAM_TDATA_blk_n_assign_proc : process(INPUT_STREAM_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699)) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723)))) then 
            INPUT_STREAM_TDATA_blk_n <= INPUT_STREAM_data_V_0_state(0);
        else 
            INPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    INPUT_STREAM_TREADY <= INPUT_STREAM_dest_V_0_state(1);
    INPUT_STREAM_data_V_0_ack_in <= INPUT_STREAM_data_V_0_state(1);

    INPUT_STREAM_data_V_0_ack_out_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0)))))) then 
            INPUT_STREAM_data_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    INPUT_STREAM_data_V_0_data_out_assign_proc : process(INPUT_STREAM_data_V_0_payload_A, INPUT_STREAM_data_V_0_payload_B, INPUT_STREAM_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = INPUT_STREAM_data_V_0_sel)) then 
            INPUT_STREAM_data_V_0_data_out <= INPUT_STREAM_data_V_0_payload_B;
        else 
            INPUT_STREAM_data_V_0_data_out <= INPUT_STREAM_data_V_0_payload_A;
        end if; 
    end process;

    INPUT_STREAM_data_V_0_load_A <= (INPUT_STREAM_data_V_0_state_cmp_full and not(INPUT_STREAM_data_V_0_sel_wr));
    INPUT_STREAM_data_V_0_load_B <= (INPUT_STREAM_data_V_0_sel_wr and INPUT_STREAM_data_V_0_state_cmp_full);
    INPUT_STREAM_data_V_0_sel <= INPUT_STREAM_data_V_0_sel_rd;
    INPUT_STREAM_data_V_0_state_cmp_full <= '0' when (INPUT_STREAM_data_V_0_state = ap_const_lv2_1) else '1';
    INPUT_STREAM_data_V_0_vld_in <= INPUT_STREAM_TVALID;
    INPUT_STREAM_data_V_0_vld_out <= INPUT_STREAM_data_V_0_state(0);

    INPUT_STREAM_dest_V_0_ack_out_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0)))))) then 
            INPUT_STREAM_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            INPUT_STREAM_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    INPUT_STREAM_dest_V_0_vld_in <= INPUT_STREAM_TVALID;
    OUTPUT_STREAM_TDATA <= OUTPUT_STREAM_data_V_1_data_out;

    OUTPUT_STREAM_TDATA_blk_n_assign_proc : process(OUTPUT_STREAM_data_V_1_state, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)))) then 
            OUTPUT_STREAM_TDATA_blk_n <= OUTPUT_STREAM_data_V_1_state(1);
        else 
            OUTPUT_STREAM_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUTPUT_STREAM_TDEST <= OUTPUT_STREAM_dest_V_1_data_out;
    OUTPUT_STREAM_TID <= OUTPUT_STREAM_id_V_1_data_out;
    OUTPUT_STREAM_TKEEP <= OUTPUT_STREAM_keep_V_1_data_out;
    OUTPUT_STREAM_TLAST <= OUTPUT_STREAM_last_V_1_data_out;
    OUTPUT_STREAM_TSTRB <= OUTPUT_STREAM_strb_V_1_data_out;
    OUTPUT_STREAM_TUSER <= OUTPUT_STREAM_user_V_1_data_out;
    OUTPUT_STREAM_TVALID <= OUTPUT_STREAM_dest_V_1_state(0);
    OUTPUT_STREAM_data_V_1_ack_in <= OUTPUT_STREAM_data_V_1_state(1);
    OUTPUT_STREAM_data_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_data_V_1_data_out_assign_proc : process(OUTPUT_STREAM_data_V_1_payload_A, OUTPUT_STREAM_data_V_1_payload_B, OUTPUT_STREAM_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_data_V_1_sel)) then 
            OUTPUT_STREAM_data_V_1_data_out <= OUTPUT_STREAM_data_V_1_payload_B;
        else 
            OUTPUT_STREAM_data_V_1_data_out <= OUTPUT_STREAM_data_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_data_V_1_load_A <= (OUTPUT_STREAM_data_V_1_state_cmp_full and not(OUTPUT_STREAM_data_V_1_sel_wr));
    OUTPUT_STREAM_data_V_1_load_B <= (OUTPUT_STREAM_data_V_1_sel_wr and OUTPUT_STREAM_data_V_1_state_cmp_full);
    OUTPUT_STREAM_data_V_1_sel <= OUTPUT_STREAM_data_V_1_sel_rd;
    OUTPUT_STREAM_data_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_data_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_data_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_data_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_data_V_1_vld_out <= OUTPUT_STREAM_data_V_1_state(0);
    OUTPUT_STREAM_dest_V_1_ack_in <= OUTPUT_STREAM_dest_V_1_state(1);
    OUTPUT_STREAM_dest_V_1_ack_out <= OUTPUT_STREAM_TREADY;
    OUTPUT_STREAM_dest_V_1_data_out <= ap_const_lv5_0;
    OUTPUT_STREAM_dest_V_1_sel <= OUTPUT_STREAM_dest_V_1_sel_rd;

    OUTPUT_STREAM_dest_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_dest_V_1_vld_out <= OUTPUT_STREAM_dest_V_1_state(0);
    OUTPUT_STREAM_id_V_1_ack_in <= OUTPUT_STREAM_id_V_1_state(1);
    OUTPUT_STREAM_id_V_1_ack_out <= OUTPUT_STREAM_TREADY;
    OUTPUT_STREAM_id_V_1_data_out <= ap_const_lv5_0;
    OUTPUT_STREAM_id_V_1_sel <= OUTPUT_STREAM_id_V_1_sel_rd;

    OUTPUT_STREAM_id_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_id_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_id_V_1_vld_out <= OUTPUT_STREAM_id_V_1_state(0);
    OUTPUT_STREAM_keep_V_1_ack_in <= OUTPUT_STREAM_keep_V_1_state(1);
    OUTPUT_STREAM_keep_V_1_ack_out <= OUTPUT_STREAM_TREADY;
    OUTPUT_STREAM_keep_V_1_data_out <= ap_const_lv4_F;
    OUTPUT_STREAM_keep_V_1_sel <= OUTPUT_STREAM_keep_V_1_sel_rd;

    OUTPUT_STREAM_keep_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_keep_V_1_vld_out <= OUTPUT_STREAM_keep_V_1_state(0);
    OUTPUT_STREAM_last_V_1_ack_in <= OUTPUT_STREAM_last_V_1_state(1);
    OUTPUT_STREAM_last_V_1_ack_out <= OUTPUT_STREAM_TREADY;

    OUTPUT_STREAM_last_V_1_data_out_assign_proc : process(OUTPUT_STREAM_last_V_1_payload_A, OUTPUT_STREAM_last_V_1_payload_B, OUTPUT_STREAM_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = OUTPUT_STREAM_last_V_1_sel)) then 
            OUTPUT_STREAM_last_V_1_data_out <= OUTPUT_STREAM_last_V_1_payload_B;
        else 
            OUTPUT_STREAM_last_V_1_data_out <= OUTPUT_STREAM_last_V_1_payload_A;
        end if; 
    end process;

    OUTPUT_STREAM_last_V_1_load_A <= (OUTPUT_STREAM_last_V_1_state_cmp_full and not(OUTPUT_STREAM_last_V_1_sel_wr));
    OUTPUT_STREAM_last_V_1_load_B <= (OUTPUT_STREAM_last_V_1_sel_wr and OUTPUT_STREAM_last_V_1_state_cmp_full);
    OUTPUT_STREAM_last_V_1_sel <= OUTPUT_STREAM_last_V_1_sel_rd;
    OUTPUT_STREAM_last_V_1_state_cmp_full <= '0' when (OUTPUT_STREAM_last_V_1_state = ap_const_lv2_1) else '1';

    OUTPUT_STREAM_last_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_last_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_last_V_1_vld_out <= OUTPUT_STREAM_last_V_1_state(0);
    OUTPUT_STREAM_strb_V_1_ack_in <= OUTPUT_STREAM_strb_V_1_state(1);
    OUTPUT_STREAM_strb_V_1_ack_out <= OUTPUT_STREAM_TREADY;
    OUTPUT_STREAM_strb_V_1_data_out <= ap_const_lv4_F;
    OUTPUT_STREAM_strb_V_1_sel <= OUTPUT_STREAM_strb_V_1_sel_rd;

    OUTPUT_STREAM_strb_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_strb_V_1_vld_out <= OUTPUT_STREAM_strb_V_1_state(0);
    OUTPUT_STREAM_user_V_1_ack_in <= OUTPUT_STREAM_user_V_1_state(1);
    OUTPUT_STREAM_user_V_1_ack_out <= OUTPUT_STREAM_TREADY;
    OUTPUT_STREAM_user_V_1_data_out <= ap_const_lv4_0;
    OUTPUT_STREAM_user_V_1_sel <= OUTPUT_STREAM_user_V_1_sel_rd;

    OUTPUT_STREAM_user_V_1_vld_in_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))))) then 
            OUTPUT_STREAM_user_V_1_vld_in <= ap_const_logic_1;
        else 
            OUTPUT_STREAM_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    OUTPUT_STREAM_user_V_1_vld_out <= OUTPUT_STREAM_user_V_1_state(0);

    a_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_0_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_0_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_0_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_0_address0;
        else 
            a_0_address0 <= "XXXXX";
        end if; 
    end process;


    a_0_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_0_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_0_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_0_ce0;
        else 
            a_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_0_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_0)))) then 
            a_0_we0 <= ap_const_logic_1;
        else 
            a_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_10_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_10_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_10_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_10_address0;
        else 
            a_10_address0 <= "XXXXX";
        end if; 
    end process;


    a_10_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_10_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_10_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_10_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_10_ce0;
        else 
            a_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_10_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_A)))) then 
            a_10_we0 <= ap_const_logic_1;
        else 
            a_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_11_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_11_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_11_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_11_address0;
        else 
            a_11_address0 <= "XXXXX";
        end if; 
    end process;


    a_11_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_11_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_11_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_11_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_11_ce0;
        else 
            a_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_11_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_B)))) then 
            a_11_we0 <= ap_const_logic_1;
        else 
            a_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_12_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_12_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_12_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_12_address0;
        else 
            a_12_address0 <= "XXXXX";
        end if; 
    end process;


    a_12_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_12_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_12_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_12_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_12_ce0;
        else 
            a_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_12_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_C)))) then 
            a_12_we0 <= ap_const_logic_1;
        else 
            a_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_13_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_13_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_13_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_13_address0;
        else 
            a_13_address0 <= "XXXXX";
        end if; 
    end process;


    a_13_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_13_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_13_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_13_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_13_ce0;
        else 
            a_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_13_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_D)))) then 
            a_13_we0 <= ap_const_logic_1;
        else 
            a_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_14_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_14_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_14_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_14_address0;
        else 
            a_14_address0 <= "XXXXX";
        end if; 
    end process;


    a_14_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_14_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_14_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_14_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_14_ce0;
        else 
            a_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_14_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_E)))) then 
            a_14_we0 <= ap_const_logic_1;
        else 
            a_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_15_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_15_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_15_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_15_address0;
        else 
            a_15_address0 <= "XXXXX";
        end if; 
    end process;


    a_15_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_15_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_15_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_15_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_15_ce0;
        else 
            a_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_15_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_F)))) then 
            a_15_we0 <= ap_const_logic_1;
        else 
            a_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_16_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_16_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_16_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_16_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_16_address0;
        else 
            a_16_address0 <= "XXXXX";
        end if; 
    end process;


    a_16_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_16_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_16_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_16_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_16_ce0;
        else 
            a_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_16_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_10)))) then 
            a_16_we0 <= ap_const_logic_1;
        else 
            a_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_17_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_17_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_17_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_17_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_17_address0;
        else 
            a_17_address0 <= "XXXXX";
        end if; 
    end process;


    a_17_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_17_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_17_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_17_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_17_ce0;
        else 
            a_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_17_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_11)))) then 
            a_17_we0 <= ap_const_logic_1;
        else 
            a_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_18_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_18_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_18_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_18_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_18_address0;
        else 
            a_18_address0 <= "XXXXX";
        end if; 
    end process;


    a_18_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_18_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_18_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_18_ce0;
        else 
            a_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_18_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_12)))) then 
            a_18_we0 <= ap_const_logic_1;
        else 
            a_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_19_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_19_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_19_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_19_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_19_address0;
        else 
            a_19_address0 <= "XXXXX";
        end if; 
    end process;


    a_19_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_19_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_19_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_19_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_19_ce0;
        else 
            a_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_19_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_13)))) then 
            a_19_we0 <= ap_const_logic_1;
        else 
            a_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_1_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_1_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_1_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_1_address0;
        else 
            a_1_address0 <= "XXXXX";
        end if; 
    end process;


    a_1_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_1_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_1_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_1_ce0;
        else 
            a_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_1_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1)))) then 
            a_1_we0 <= ap_const_logic_1;
        else 
            a_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_20_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_20_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_20_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_20_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_20_address0;
        else 
            a_20_address0 <= "XXXXX";
        end if; 
    end process;


    a_20_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_20_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_20_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_20_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_20_ce0;
        else 
            a_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_20_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_14)))) then 
            a_20_we0 <= ap_const_logic_1;
        else 
            a_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_21_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_21_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_21_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_21_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_21_address0;
        else 
            a_21_address0 <= "XXXXX";
        end if; 
    end process;


    a_21_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_21_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_21_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_21_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_21_ce0;
        else 
            a_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_21_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_15)))) then 
            a_21_we0 <= ap_const_logic_1;
        else 
            a_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_22_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_22_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_22_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_22_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_22_address0;
        else 
            a_22_address0 <= "XXXXX";
        end if; 
    end process;


    a_22_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_22_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_22_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_22_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_22_ce0;
        else 
            a_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_22_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_16)))) then 
            a_22_we0 <= ap_const_logic_1;
        else 
            a_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_23_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_23_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_23_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_23_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_23_address0;
        else 
            a_23_address0 <= "XXXXX";
        end if; 
    end process;


    a_23_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_23_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_23_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_23_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_23_ce0;
        else 
            a_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_23_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_17)))) then 
            a_23_we0 <= ap_const_logic_1;
        else 
            a_23_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_24_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_24_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_24_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_24_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_24_address0;
        else 
            a_24_address0 <= "XXXXX";
        end if; 
    end process;


    a_24_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_24_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_24_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_24_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_24_ce0;
        else 
            a_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_24_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_18)))) then 
            a_24_we0 <= ap_const_logic_1;
        else 
            a_24_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_25_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_25_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_25_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_25_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_25_address0;
        else 
            a_25_address0 <= "XXXXX";
        end if; 
    end process;


    a_25_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_25_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_25_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_25_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_25_ce0;
        else 
            a_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_25_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_19)))) then 
            a_25_we0 <= ap_const_logic_1;
        else 
            a_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_26_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_26_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_26_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_26_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_26_address0;
        else 
            a_26_address0 <= "XXXXX";
        end if; 
    end process;


    a_26_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_26_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_26_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_26_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_26_ce0;
        else 
            a_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_26_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1A)))) then 
            a_26_we0 <= ap_const_logic_1;
        else 
            a_26_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_27_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_27_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_27_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_27_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_27_address0;
        else 
            a_27_address0 <= "XXXXX";
        end if; 
    end process;


    a_27_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_27_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_27_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_27_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_27_ce0;
        else 
            a_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_27_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1B)))) then 
            a_27_we0 <= ap_const_logic_1;
        else 
            a_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_28_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_28_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_28_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_28_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_28_address0;
        else 
            a_28_address0 <= "XXXXX";
        end if; 
    end process;


    a_28_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_28_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_28_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_28_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_28_ce0;
        else 
            a_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_28_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1C)))) then 
            a_28_we0 <= ap_const_logic_1;
        else 
            a_28_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_29_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_29_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_29_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_29_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_29_address0;
        else 
            a_29_address0 <= "XXXXX";
        end if; 
    end process;


    a_29_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_29_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_29_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_29_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_29_ce0;
        else 
            a_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_29_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1D)))) then 
            a_29_we0 <= ap_const_logic_1;
        else 
            a_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_2_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_2_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_2_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_2_address0;
        else 
            a_2_address0 <= "XXXXX";
        end if; 
    end process;


    a_2_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_2_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_2_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_2_ce0;
        else 
            a_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_2_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_2)))) then 
            a_2_we0 <= ap_const_logic_1;
        else 
            a_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_30_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_30_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_30_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_30_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_30_address0;
        else 
            a_30_address0 <= "XXXXX";
        end if; 
    end process;


    a_30_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_30_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_30_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_30_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_30_ce0;
        else 
            a_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_30_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1E)))) then 
            a_30_we0 <= ap_const_logic_1;
        else 
            a_30_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_31_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_31_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_31_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_31_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_31_address0;
        else 
            a_31_address0 <= "XXXXX";
        end if; 
    end process;


    a_31_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_31_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_31_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_31_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_31_ce0;
        else 
            a_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_31_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_1F)))) then 
            a_31_we0 <= ap_const_logic_1;
        else 
            a_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_3_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_3_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_3_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_3_address0;
        else 
            a_3_address0 <= "XXXXX";
        end if; 
    end process;


    a_3_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_3_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_3_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_3_ce0;
        else 
            a_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_3_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_3)))) then 
            a_3_we0 <= ap_const_logic_1;
        else 
            a_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_4_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_4_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_4_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_4_address0;
        else 
            a_4_address0 <= "XXXXX";
        end if; 
    end process;


    a_4_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_4_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_4_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_4_ce0;
        else 
            a_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_4_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_4)))) then 
            a_4_we0 <= ap_const_logic_1;
        else 
            a_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_5_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_5_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_5_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_5_address0;
        else 
            a_5_address0 <= "XXXXX";
        end if; 
    end process;


    a_5_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_5_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_5_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_5_ce0;
        else 
            a_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_5_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_5)))) then 
            a_5_we0 <= ap_const_logic_1;
        else 
            a_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_6_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_6_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_6_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_6_address0;
        else 
            a_6_address0 <= "XXXXX";
        end if; 
    end process;


    a_6_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_6_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_6_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_6_ce0;
        else 
            a_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_6_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_6)))) then 
            a_6_we0 <= ap_const_logic_1;
        else 
            a_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_7_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_7_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_7_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_7_address0;
        else 
            a_7_address0 <= "XXXXX";
        end if; 
    end process;


    a_7_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_7_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_7_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_7_ce0;
        else 
            a_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_7_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_7)))) then 
            a_7_we0 <= ap_const_logic_1;
        else 
            a_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_8_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_8_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_8_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_8_address0;
        else 
            a_8_address0 <= "XXXXX";
        end if; 
    end process;


    a_8_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_8_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_8_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_8_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_8_ce0;
        else 
            a_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_8_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_8)))) then 
            a_8_we0 <= ap_const_logic_1;
        else 
            a_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    a_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_9_address0, i_0_i_cast8_mid2_fu_1401_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            a_9_address0 <= i_0_i_cast8_mid2_fu_1401_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_9_address0 <= grp_mmult_hw_float_32_s_fu_1278_a_9_address0;
        else 
            a_9_address0 <= "XXXXX";
        end if; 
    end process;


    a_9_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_a_9_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            a_9_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            a_9_ce0 <= grp_mmult_hw_float_32_s_fu_1278_a_9_ce0;
        else 
            a_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_9_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, tmp_1_reg_1714)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_1_reg_1714 = ap_const_lv5_9)))) then 
            a_9_we0 <= ap_const_logic_1;
        else 
            a_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state12 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state4 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5 downto 5);

    ap_condition_2362_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, OUTPUT_STREAM_keep_V_1_ack_in, OUTPUT_STREAM_strb_V_1_ack_in, OUTPUT_STREAM_user_V_1_ack_in, OUTPUT_STREAM_last_V_1_ack_in, OUTPUT_STREAM_id_V_1_ack_in, OUTPUT_STREAM_dest_V_1_ack_in)
    begin
                ap_condition_2362 <= ((OUTPUT_STREAM_data_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_keep_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_strb_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_user_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_last_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_id_V_1_ack_in = ap_const_logic_0) or (OUTPUT_STREAM_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state12, ap_condition_2362)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not((ap_condition_2362 = ap_const_boolean_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, ap_condition_2362)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not((ap_condition_2362 = ap_const_boolean_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    b_0_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_0_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_0_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_0_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_0_address0;
        else 
            b_0_address0 <= "XXXXX";
        end if; 
    end process;


    b_0_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_0_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_0_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_0_ce0;
        else 
            b_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_0_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_0)))) then 
            b_0_we0 <= ap_const_logic_1;
        else 
            b_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_10_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_10_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_10_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_10_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_10_address0;
        else 
            b_10_address0 <= "XXXXX";
        end if; 
    end process;


    b_10_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_10_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_10_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_10_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_10_ce0;
        else 
            b_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_10_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_A)))) then 
            b_10_we0 <= ap_const_logic_1;
        else 
            b_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_11_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_11_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_11_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_11_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_11_address0;
        else 
            b_11_address0 <= "XXXXX";
        end if; 
    end process;


    b_11_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_11_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_11_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_11_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_11_ce0;
        else 
            b_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_11_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_B)))) then 
            b_11_we0 <= ap_const_logic_1;
        else 
            b_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_12_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_12_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_12_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_12_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_12_address0;
        else 
            b_12_address0 <= "XXXXX";
        end if; 
    end process;


    b_12_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_12_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_12_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_12_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_12_ce0;
        else 
            b_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_12_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_C)))) then 
            b_12_we0 <= ap_const_logic_1;
        else 
            b_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_13_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_13_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_13_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_13_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_13_address0;
        else 
            b_13_address0 <= "XXXXX";
        end if; 
    end process;


    b_13_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_13_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_13_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_13_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_13_ce0;
        else 
            b_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_13_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_D)))) then 
            b_13_we0 <= ap_const_logic_1;
        else 
            b_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_14_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_14_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_14_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_14_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_14_address0;
        else 
            b_14_address0 <= "XXXXX";
        end if; 
    end process;


    b_14_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_14_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_14_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_14_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_14_ce0;
        else 
            b_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_14_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_E)))) then 
            b_14_we0 <= ap_const_logic_1;
        else 
            b_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_15_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_15_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_15_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_15_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_15_address0;
        else 
            b_15_address0 <= "XXXXX";
        end if; 
    end process;


    b_15_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_15_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_15_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_15_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_15_ce0;
        else 
            b_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_15_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_F)))) then 
            b_15_we0 <= ap_const_logic_1;
        else 
            b_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_16_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_16_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_16_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_16_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_16_address0;
        else 
            b_16_address0 <= "XXXXX";
        end if; 
    end process;


    b_16_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_16_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_16_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_16_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_16_ce0;
        else 
            b_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_16_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_10)))) then 
            b_16_we0 <= ap_const_logic_1;
        else 
            b_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_17_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_17_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_17_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_17_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_17_address0;
        else 
            b_17_address0 <= "XXXXX";
        end if; 
    end process;


    b_17_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_17_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_17_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_17_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_17_ce0;
        else 
            b_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_17_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_11)))) then 
            b_17_we0 <= ap_const_logic_1;
        else 
            b_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_18_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_18_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_18_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_18_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_18_address0;
        else 
            b_18_address0 <= "XXXXX";
        end if; 
    end process;


    b_18_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_18_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_18_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_18_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_18_ce0;
        else 
            b_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_18_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_12)))) then 
            b_18_we0 <= ap_const_logic_1;
        else 
            b_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_19_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_19_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_19_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_19_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_19_address0;
        else 
            b_19_address0 <= "XXXXX";
        end if; 
    end process;


    b_19_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_19_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_19_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_19_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_19_ce0;
        else 
            b_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_19_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_13)))) then 
            b_19_we0 <= ap_const_logic_1;
        else 
            b_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_1_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_1_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_1_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_1_address0;
        else 
            b_1_address0 <= "XXXXX";
        end if; 
    end process;


    b_1_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_1_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_1_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_1_ce0;
        else 
            b_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_1_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1)))) then 
            b_1_we0 <= ap_const_logic_1;
        else 
            b_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_20_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_20_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_20_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_20_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_20_address0;
        else 
            b_20_address0 <= "XXXXX";
        end if; 
    end process;


    b_20_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_20_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_20_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_20_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_20_ce0;
        else 
            b_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_20_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_14)))) then 
            b_20_we0 <= ap_const_logic_1;
        else 
            b_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_21_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_21_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_21_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_21_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_21_address0;
        else 
            b_21_address0 <= "XXXXX";
        end if; 
    end process;


    b_21_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_21_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_21_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_21_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_21_ce0;
        else 
            b_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_21_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_15)))) then 
            b_21_we0 <= ap_const_logic_1;
        else 
            b_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_22_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_22_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_22_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_22_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_22_address0;
        else 
            b_22_address0 <= "XXXXX";
        end if; 
    end process;


    b_22_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_22_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_22_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_22_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_22_ce0;
        else 
            b_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_22_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_16)))) then 
            b_22_we0 <= ap_const_logic_1;
        else 
            b_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_23_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_23_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_23_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_23_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_23_address0;
        else 
            b_23_address0 <= "XXXXX";
        end if; 
    end process;


    b_23_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_23_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_23_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_23_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_23_ce0;
        else 
            b_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_23_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_17)))) then 
            b_23_we0 <= ap_const_logic_1;
        else 
            b_23_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_24_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_24_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_24_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_24_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_24_address0;
        else 
            b_24_address0 <= "XXXXX";
        end if; 
    end process;


    b_24_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_24_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_24_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_24_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_24_ce0;
        else 
            b_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_24_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_18)))) then 
            b_24_we0 <= ap_const_logic_1;
        else 
            b_24_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_25_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_25_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_25_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_25_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_25_address0;
        else 
            b_25_address0 <= "XXXXX";
        end if; 
    end process;


    b_25_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_25_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_25_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_25_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_25_ce0;
        else 
            b_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_25_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_19)))) then 
            b_25_we0 <= ap_const_logic_1;
        else 
            b_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_26_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_26_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_26_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_26_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_26_address0;
        else 
            b_26_address0 <= "XXXXX";
        end if; 
    end process;


    b_26_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_26_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_26_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_26_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_26_ce0;
        else 
            b_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_26_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1A)))) then 
            b_26_we0 <= ap_const_logic_1;
        else 
            b_26_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_27_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_27_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_27_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_27_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_27_address0;
        else 
            b_27_address0 <= "XXXXX";
        end if; 
    end process;


    b_27_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_27_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_27_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_27_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_27_ce0;
        else 
            b_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_27_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1B)))) then 
            b_27_we0 <= ap_const_logic_1;
        else 
            b_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_28_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_28_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_28_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_28_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_28_address0;
        else 
            b_28_address0 <= "XXXXX";
        end if; 
    end process;


    b_28_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_28_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_28_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_28_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_28_ce0;
        else 
            b_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_28_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1C)))) then 
            b_28_we0 <= ap_const_logic_1;
        else 
            b_28_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_29_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_29_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_29_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_29_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_29_address0;
        else 
            b_29_address0 <= "XXXXX";
        end if; 
    end process;


    b_29_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_29_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_29_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_29_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_29_ce0;
        else 
            b_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_29_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1D)))) then 
            b_29_we0 <= ap_const_logic_1;
        else 
            b_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_2_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_2_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_2_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_2_address0;
        else 
            b_2_address0 <= "XXXXX";
        end if; 
    end process;


    b_2_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_2_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_2_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_2_ce0;
        else 
            b_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_2_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_2)))) then 
            b_2_we0 <= ap_const_logic_1;
        else 
            b_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_30_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_30_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_30_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_30_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_30_address0;
        else 
            b_30_address0 <= "XXXXX";
        end if; 
    end process;


    b_30_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_30_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_30_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_30_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_30_ce0;
        else 
            b_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_30_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1E)))) then 
            b_30_we0 <= ap_const_logic_1;
        else 
            b_30_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_31_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_31_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_31_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_31_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_31_address0;
        else 
            b_31_address0 <= "XXXXX";
        end if; 
    end process;


    b_31_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_31_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_31_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_31_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_31_ce0;
        else 
            b_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_31_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_1F)))) then 
            b_31_we0 <= ap_const_logic_1;
        else 
            b_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_3_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_3_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_3_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_3_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_3_address0;
        else 
            b_3_address0 <= "XXXXX";
        end if; 
    end process;


    b_3_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_3_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_3_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_3_ce0;
        else 
            b_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_3_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_3)))) then 
            b_3_we0 <= ap_const_logic_1;
        else 
            b_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_4_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_4_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_4_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_4_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_4_address0;
        else 
            b_4_address0 <= "XXXXX";
        end if; 
    end process;


    b_4_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_4_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_4_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_4_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_4_ce0;
        else 
            b_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_4_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_4)))) then 
            b_4_we0 <= ap_const_logic_1;
        else 
            b_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_5_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_5_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_5_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_5_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_5_address0;
        else 
            b_5_address0 <= "XXXXX";
        end if; 
    end process;


    b_5_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_5_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_5_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_5_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_5_ce0;
        else 
            b_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_5_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_5)))) then 
            b_5_we0 <= ap_const_logic_1;
        else 
            b_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_6_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_6_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_6_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_6_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_6_address0;
        else 
            b_6_address0 <= "XXXXX";
        end if; 
    end process;


    b_6_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_6_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_6_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_6_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_6_ce0;
        else 
            b_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_6_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_6)))) then 
            b_6_we0 <= ap_const_logic_1;
        else 
            b_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_7_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_7_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_7_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_7_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_7_address0;
        else 
            b_7_address0 <= "XXXXX";
        end if; 
    end process;


    b_7_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_7_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_7_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_7_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_7_ce0;
        else 
            b_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_7_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_7)))) then 
            b_7_we0 <= ap_const_logic_1;
        else 
            b_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_8_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_8_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_8_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_8_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_8_address0;
        else 
            b_8_address0 <= "XXXXX";
        end if; 
    end process;


    b_8_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_8_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_8_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_8_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_8_ce0;
        else 
            b_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_8_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_8)))) then 
            b_8_we0 <= ap_const_logic_1;
        else 
            b_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    b_9_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_9_address0, j2_0_i_cast5_fu_1522_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1))) then 
            b_9_address0 <= j2_0_i_cast5_fu_1522_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_9_address0 <= grp_mmult_hw_float_32_s_fu_1278_b_9_address0;
        else 
            b_9_address0 <= "XXXXX";
        end if; 
    end process;


    b_9_ce0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_b_9_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))))) then 
            b_9_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            b_9_ce0 <= grp_mmult_hw_float_32_s_fu_1278_b_9_ce0;
        else 
            b_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_9_we0_assign_proc : process(INPUT_STREAM_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, tmp_2_reg_1742)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723) and (INPUT_STREAM_data_V_0_vld_out = ap_const_logic_0))) and (tmp_2_reg_1742 = ap_const_lv5_9)))) then 
            b_9_we0 <= ap_const_logic_1;
        else 
            b_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_i_fu_1490_p2 <= "1" when (j2_0_i_reg_1234 = ap_const_lv6_20) else "0";
    exitcond4_i_fu_1369_p2 <= "1" when (j_0_i_reg_1201 = ap_const_lv6_20) else "0";
    exitcond_flatten1_fu_1472_p2 <= "1" when (indvar_flatten1_reg_1212 = ap_const_lv11_400) else "0";
    exitcond_flatten2_fu_1593_p2 <= "1" when (indvar_flatten2_reg_1245 = ap_const_lv11_400) else "0";
    exitcond_flatten_fu_1351_p2 <= "1" when (indvar_flatten_reg_1179 = ap_const_lv11_400) else "0";
    exitcond_i_fu_1611_p2 <= "1" when (j5_0_i_reg_1267 = ap_const_lv6_20) else "0";
    grp_mmult_hw_float_32_s_fu_1278_ap_start <= ap_reg_grp_mmult_hw_float_32_s_fu_1278_ap_start;

    i1_0_i_phi_fu_1227_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_flatten1_reg_1723, i1_0_i_reg_1223, i1_0_i_t_mid2_v_reg_1737)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = exitcond_flatten1_reg_1723))) then 
            i1_0_i_phi_fu_1227_p4 <= i1_0_i_t_mid2_v_reg_1737;
        else 
            i1_0_i_phi_fu_1227_p4 <= i1_0_i_reg_1223;
        end if; 
    end process;

    i1_0_i_t_mid2_v_fu_1504_p3 <= 
        i_1_fu_1484_p2 when (exitcond2_i_fu_1490_p2(0) = '1') else 
        i1_0_i_phi_fu_1227_p4;
    i4_0_i_cast4_mid2_v_fu_1625_p3 <= 
        i_2_fu_1605_p2 when (exitcond_i_fu_1611_p2(0) = '1') else 
        i4_0_i_phi_fu_1260_p4;

    i4_0_i_phi_fu_1260_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, i4_0_i_reg_1256, i4_0_i_cast4_mid2_v_reg_1760)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751))) then 
            i4_0_i_phi_fu_1260_p4 <= i4_0_i_cast4_mid2_v_reg_1760;
        else 
            i4_0_i_phi_fu_1260_p4 <= i4_0_i_reg_1256;
        end if; 
    end process;

    i_0_i_cast8_mid2_fu_1401_p1 <= std_logic_vector(resize(unsigned(i_0_i_cast8_mid2_v_reg_1708),32));
    i_0_i_cast8_mid2_v_fu_1383_p3 <= 
        i_fu_1363_p2 when (exitcond4_i_fu_1369_p2(0) = '1') else 
        i_0_i_phi_fu_1194_p4;

    i_0_i_phi_fu_1194_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_flatten_reg_1699, i_0_i_reg_1190, i_0_i_cast8_mid2_v_reg_1708)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_flatten_reg_1699))) then 
            i_0_i_phi_fu_1194_p4 <= i_0_i_cast8_mid2_v_reg_1708;
        else 
            i_0_i_phi_fu_1194_p4 <= i_0_i_reg_1190;
        end if; 
    end process;

    i_1_fu_1484_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(i1_0_i_phi_fu_1227_p4));
    i_2_fu_1605_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(i4_0_i_phi_fu_1260_p4));
    i_fu_1363_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(i_0_i_phi_fu_1194_p4));
    indvar_flatten_next1_fu_1599_p2 <= std_logic_vector(unsigned(indvar_flatten2_reg_1245) + unsigned(ap_const_lv11_1));
    indvar_flatten_next2_fu_1478_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_1212) + unsigned(ap_const_lv11_1));
    indvar_flatten_next_fu_1357_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1179) + unsigned(ap_const_lv11_1));
    j2_0_i_cast5_fu_1522_p1 <= std_logic_vector(resize(unsigned(j2_0_i_mid2_reg_1732),32));
    j2_0_i_mid2_fu_1496_p3 <= 
        ap_const_lv6_0 when (exitcond2_i_fu_1490_p2(0) = '1') else 
        j2_0_i_reg_1234;
    j5_0_i_cast1_cast_fu_1661_p1 <= std_logic_vector(resize(unsigned(j5_0_i_mid2_fu_1617_p3),12));
    j5_0_i_cast2_fu_1657_p1 <= std_logic_vector(resize(unsigned(j5_0_i_mid2_fu_1617_p3),10));
    j5_0_i_mid2_fu_1617_p3 <= 
        ap_const_lv6_0 when (exitcond_i_fu_1611_p2(0) = '1') else 
        j5_0_i_reg_1267;
    j_0_i_mid2_fu_1375_p3 <= 
        ap_const_lv6_0 when (exitcond4_i_fu_1369_p2(0) = '1') else 
        j_0_i_reg_1201;
    j_1_fu_1516_p2 <= std_logic_vector(unsigned(j2_0_i_mid2_fu_1496_p3) + unsigned(ap_const_lv6_1));
    j_2_fu_1688_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(j5_0_i_mid2_fu_1617_p3));
    j_fu_1395_p2 <= std_logic_vector(unsigned(j_0_i_mid2_fu_1375_p3) + unsigned(ap_const_lv6_1));
    k_fu_1676_p2 <= std_logic_vector(unsigned(tmp_7_mid2_fu_1649_p3) + unsigned(j5_0_i_cast2_fu_1657_p1));
    last_assign_fu_1682_p2 <= "1" when (k_fu_1676_p2 = ap_const_lv10_3FF) else "0";

    out_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_out_r_address0, tmp_36_cast_fu_1671_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            out_address0 <= tmp_36_cast_fu_1671_p1(10 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            out_address0 <= grp_mmult_hw_float_32_s_fu_1278_out_r_address0;
        else 
            out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    out_ce0_assign_proc : process(OUTPUT_STREAM_data_V_1_ack_in, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter2, ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751, ap_enable_reg_pp2_iter0, ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_out_r_ce0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp2_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_0 = exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp2_iter2) and (ap_const_lv1_0 = ap_pipeline_reg_pp2_iter1_exitcond_flatten2_reg_1751) and (ap_const_logic_0 = OUTPUT_STREAM_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0))) then 
            out_ce0 <= ap_const_logic_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            out_ce0 <= grp_mmult_hw_float_32_s_fu_1278_out_r_ce0;
        else 
            out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_we0_assign_proc : process(ap_CS_fsm_state8, grp_mmult_hw_float_32_s_fu_1278_out_r_we0)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            out_we0 <= grp_mmult_hw_float_32_s_fu_1278_out_r_we0;
        else 
            out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_1_fu_1557_p1 <= INPUT_STREAM_data_V_0_data_out;
    ret_fu_1436_p1 <= INPUT_STREAM_data_V_0_data_out;
    tmp_1_fu_1391_p1 <= j_0_i_mid2_fu_1375_p3(5 - 1 downto 0);
    tmp_2_fu_1512_p1 <= i1_0_i_t_mid2_v_fu_1504_p3(5 - 1 downto 0);
    tmp_34_cast_fu_1641_p1 <= std_logic_vector(resize(unsigned(tmp_fu_1633_p3),12));
    tmp_34_fu_1665_p2 <= std_logic_vector(unsigned(tmp_34_cast_fu_1641_p1) + unsigned(j5_0_i_cast1_cast_fu_1661_p1));
    tmp_36_cast_fu_1671_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_1665_p2),32));
    tmp_3_fu_1645_p1 <= i4_0_i_cast4_mid2_v_fu_1625_p3(5 - 1 downto 0);
    tmp_7_mid2_fu_1649_p3 <= (tmp_3_fu_1645_p1 & ap_const_lv5_0);
    tmp_fu_1633_p3 <= (i4_0_i_cast4_mid2_v_fu_1625_p3 & ap_const_lv5_0);
    val_assign_fu_1694_p1 <= out_q0;
end behav;
